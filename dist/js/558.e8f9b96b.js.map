{"version":3,"file":"js/558.e8f9b96b.js","mappings":"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","sources":["webpack://varun-website-updated/./src/views/projects/storyglow.txt","webpack://varun-website-updated/./src/views/individualProject.vue","webpack://varun-website-updated/./src/views/projects/munchmaps.txt","webpack://varun-website-updated/./src/views/projects/fractal.txt","webpack://varun-website-updated/./src/views/projects/H3.txt","webpack://varun-website-updated/./src/views/projects/heartbeatChecker.txt","webpack://varun-website-updated/./src/views/projects/alpaca.txt","webpack://varun-website-updated/./src/views/projects/seagate.txt","webpack://varun-website-updated/./src/views/individualProject.vue?4f16","webpack://varun-website-updated/./src/assets/project-imgs/ sync ^\\.\\/.*$"],"sourcesContent":["export default \"Storyglow is a mobile application that allows users to build interactive scenes using color changing lightbulbs and free sound effects. This application gives users the ability to transform their environment into that of the fantasy world theyâ€™re immersed in.*\\n\\nStorytelling is an important part of any individuals childhood. It allows for dedecated family time, helps children to get more used to and interested reading and helps spark imagination and creativity at an early age. With this in mind, this projects goal was to make storytelling more immersive and interactive for children, furthering the benefits of storytelling in an easily accessible way.*\\n\\nStoryglow users can make a grouping of \\\"scenes\\\" which are swipeable pages on the screen. On each one, they can set a color for the color-changing lightbulbs connected and add 6 sound effects to use in that scene. These sound effects can be triggered with a button click, and can used by the child or the parent as the other reads. Users can swipe for scene to scene, allowing for easy transitions as the story progresses.*\\n\\nFRAME #### https://www.youtube-nocookie.com/embed/LPCXZf6-A-E #### 800px #### 450px * \\n\\nA large portion of the project was also spent developing a working prototype which we used to test with a range of potential users. With a several paper prototypes and two virtual prototypes we were able to proceed into development with a clear understanding of what our users wanted and how our app should flow. *\\n\\nFRAME #### https://www.figma.com/embed?embed_host=share&url=https%3A%2F%2Fwww.figma.com%2Fproto%2F67i74udcC3SRBBmN0oQvr0%2FStoryGlowGeneralUI%3Fnode-id%3D1%253A2%26scaling%3Dscale-down%26page-id%3D0%253A1%26starting-point-node-id%3D1%253A2\\\" #### 800px #### 450px * \\n\\nWhile storyglow's initial goal was to improve upon storytelling, this application can be used in a multitude of other environments such as for building sets for plays and musicals or playing dungeons and dragons with friends.*\\n\\nLink ####  Github Link #### https://github.com/varunknarayanswamy/StoryGlow *\\n\\nLink #### Progress Blog Link #### https://jennifermahtam.wordpress.com/category/capstone/\\n\";","<template>\n  <div class=\"project-object\">\n    <h1 :name=\"title_current_name\"> {{title_current_name}}</h1>\n   <!--- <img class=\"project-icon\" :src=\"main_img\"/> -->\n\n    <div class=\"description\" id=\"description\">\n    </div>\n  </div>\n</template>\n\n<script>\n  import storyglowText from 'raw-loader!./projects/storyglow.txt';\n  import munchmapsText from 'raw-loader!./projects/munchmaps.txt';\n  import fractalText from 'raw-loader!./projects/fractal.txt';\n  import H3Text from 'raw-loader!./projects/H3.txt';\n  import heartbeatCheckerText from 'raw-loader!./projects/heartbeatChecker.txt';\n  import alpacaText from 'raw-loader!./projects/alpaca.txt';\n  import seagateText from 'raw-loader!./projects/seagate.txt';\n  export default {\n    name: 'project-object',\n    data() {\n      return {\n        storyglowText: storyglowText,\n        munchmapsText: munchmapsText,\n        fractalText: fractalText,\n        H3Text: H3Text,\n        heartbeatCheckerText: heartbeatCheckerText,\n        alpacaText: alpacaText,\n        seagateText: seagateText,\n        current_url: ''\n      }\n    },\n    mounted() {\n      this.build_project_page();\n    },\n    beforeUpdate() {\n      console.log(\"beforeUpdate\")\n      this.build_project_page();\n    },\n    computed: {\n      current_name() {\n        let url =  window.location.href;\n        let page_name = url.split('individual-project/');\n        return page_name[1];\n      },\n      title_current_name() {\n        var project_name = this.current_name;\n        if (project_name == \"fractal\") {\n          project_name = \"Fractal Music Visualization\";\n        }\n        return project_name.charAt(0).toUpperCase() + project_name.slice(1);\n      },\n      main_img() {\n        let base_url = '../assets/project-imgs/';\n        let current_name = this.current_name;\n        let url = base_url + current_name + \".png\";\n        console.log(url);\n        var images = require.context('../assets/project-imgs/')\n        return images('./' + current_name + \".png\");\n      }\n    },\n    methods: {\n      build_project_page: function() {\n        console.log(\"building project\")\n        let project_name = this.current_name;\n        let project_name_description = project_name + \"Text\";\n        var temp = document.getElementById('description');\n        temp.textContent = '';\n        let project_description_string = this[project_name_description];\n        let project_array = project_description_string.split(\"*\");\n        for (let i = 0; i < project_array.length; i++) {\n          var media_objects = []\n          if (project_array[i].includes('####')) {\n            media_objects = project_array[i].split(\"####\");\n          }\n          if (project_array[i].includes(\"Link\")) {\n            this.create_link_object(temp, media_objects);\n          } else if (project_array[i].includes(\"FRAME\")) {\n            this.create_frame_object(temp, media_objects);\n          } else if (project_array[i].includes(\"LIST\")) { \n            this.create_list_object(temp, media_objects);\n          } else {\n            let p = document.createElement('p');\n            p.innerHTML = project_array[i];\n            temp.appendChild(p);\n          }\n        }\n      },\n      create_frame_object(temp, media_objects) {\n        var frame_div = document.createElement('div');\n        frame_div.width = \"100%\";\n        frame_div.style.textAlign = \"center\";\n        var frame = document.createElement('iframe');\n        frame.src = media_objects[1];\n        frame.width = media_objects[2];\n        frame.height = media_objects[3];\n        frame.setAttribute('allowFullScreen', '')\n        frame_div.appendChild(frame);\n        temp.appendChild(frame_div);\n        temp.appendChild(document.createElement(\"p\"));\n      },\n      create_link_object(temp, media_objects) {\n        var a = document.createElement(\"a\");\n        var link_div = document.createElement('div');\n        link_div.width = \"100%\";\n        link_div.style.textAlign = \"center\";\n        var text = document.createTextNode(media_objects[1]);\n        a.appendChild(text);\n        a.title = media_objects[1];\n        a.href = media_objects[2];\n        link_div.appendChild(a);\n        temp.append(link_div);\n      },\n      create_list_object(temp, media_objects) {\n        var list_div = document.createElement('div');\n        list_div.width = \"100%\";\n        list_div.style.display = \"flex\";\n        list_div.style.justifyContent = \"space-evenly\";\n        var list_number = Math.round(media_objects.length/3);\n        console.log(list_number)\n        if (list_number > 4) {\n          list_number = 4;\n        }\n        var ul_array = [] \n        for (var j = 0; j<list_number; j++) {\n          ul_array.push(document.createElement(\"ul\"))\n        }\n        for (var i = 1; i<media_objects.length; i++) {\n          let correct_array = Math.floor(i/list_number);\n          let selected_ul = i - correct_array * list_number;\n          var li = document.createElement('li');\n          li.innerHTML = media_objects[i];\n          ul_array[selected_ul].appendChild(li)\n        }\n        for (var k = 0; k<list_number; k++) {\n          list_div.append(ul_array[k])\n        }\n        temp.append(list_div);\n      },\n\n    }\n  }\n</script>\n\n<style scoped>\n  img {\n    width: 30%;\n  }\n  .project-object {\n    min-height: 100vh;\n  }\n  .project-icon {\n    max-width: 20%;\n    margin-bottom: 20px;\n  }\n  .general_info {\n    margin-top: 1px;\n    margin-left: 10%;\n    margin-right: 10%;\n    padding: 0.5%;\n  }\n  .home {\n    height: 100%;\n    background-color: rgba(0, 0, 650, 0.2);\n    margin: 1%;\n    min-height: 100%;\n    padding: 2%;\n  }\n  .description {\n    margin-bottom: 5%;\n    margin-left: 20%;\n    margin-right: 20%;\n    color: black;\n    font-weight: 450;\n    text-align: justify;\n    display: inline-block;\n  }\n  h1 {\n    color: black;\n    font-size: 50px;\n  }\n</style>","export default \"Nothing bothers me more than when someone gives me a restaurant suggestion that sounds interesting but when I need it I can't remember it. *\\n\\nMunchmaps is an iOS mobile application that allows users to search for a filtered set of restaurants based on price, cuisine and more. \\nOnce discovered they can then save the restaurants as Saved or Future restaurants. *\\n\\nBelow is a short video demo of how Munchmaps works in action running on a real phone *\\nFRAME #### https://player.vimeo.com/video/333646784?h=f176f1acc8 #### 300px #### 450px * \\n\\nMunchmaps is developed in Swift and uses the Zomato API to display the needed restaurants in the local area. \\nIt displays a map indicator of where the restaurant is and allows users to see a quick list of all saved and future restaurants.*\\n\\nLink #### Github link #### https://github.com/varunknarayanswamy/MunchMaps\\n\";","export default \"The fractal project is a musical data visualization project developed for a Markov Chain Project. *\\n\\nThis group project takes in a song and depending on a number of different aspects such as current volume, frequency, and rythme. This can make an impact on the size of the fractal, the width, height and the colors. *\\n\\nThe project was developed in Processing, using Java and Python. This application uses the Fast Fourier Transformation Matrix to analyzing an MP3 of music, and uses it build fractal trees with a variety of different design determined by the sound waves the matrix interprets. *\\n\\nFRAME #### https://www.youtube-nocookie.com/embed/o_1kU06HWPE #### 800px #### 450px *\\n\\n Link ####  Github Link #### https://github.com/jackspicer1229/music_generated_fractals\";","export default \"The Internet Accessibility Map is a H3 project built in ObservableHQ. This project is an data visualization project which illustrates who the increase in internet access and usage in households affects the gender ratio of men to women using the internet.*\\n\\nThis project uses the data collected by Meta on the last 5 years of internet usage around the world. This project focuses only on 3 of those years from 2018 to 2020 as we do not have required information for 2017 and 2021. The data is mapped to a color value which determines the brightness of the individual country on the map.*\\n\\nFor the first map, which maps the percent of the household which uses the internet, the brighter the country indicates a higher percentage, and more internet usage. For the second map, which maps the percent difference between male and female internet usage, the brighter the color the larger the differences, indicating more male usage*\\n\\nBased on the data visualization, it is clear that over the last few years the percentage of internet users in the household especially in developing countries has increased, and with that, the percentage of men to woman has decreased. This indicates that more woman have been exposed to the internet, balancing the ratio.*\\n\\nLink ####  Link to ObservableHQ project #### https://observablehq.com/d/590f2861dd60297e\";","export default \"The HeartbeatChecker is a mobile application that allows users to effectively checker their hearbeat using a simple app on their phone. *\\nAfter launching the app, simply cover the iphone camera with a finger and press record. The application will turn on the iPhone's flashlight, illuminating the finger pad to get a better sense of the pulses moving through it. The application will give 5 seconds to readjust and afterward will begin checking the number of heartbeats it receives. After the user decides the application has checked for long enough they can finish recording and the application with report to them their heartbeat in beats per minute.*\\n\\nFRAME #### https://player.vimeo.com/video/757682451?h=f6b7088fbb\\\" #### 300px #### 600px * \\nThe application works by grabbing each frame of the video the user is taking, getting an average value for the pixel data in that frame. By comparing the frame to the ones surrounding it, we can easily finds the peaks in pixel data that indicate a heartbeat and keep track of the number of hearbeats in the duration of the video.*\\n\\nLink #### Github Link #### https://github.com/varunknarayanswamy/heartbeatChecker\\n\";","export default \"The alpaca project, previously known as the Wearable Toolkit is a mobile applicaton project I  developed in the Laboratory for Playful Computation.\\nThe project hopes to teach the next generation about the world of machine learning through the lense of improving physical fitness and training sports skills.*\\n\\nThe application connects through bluetooth to a accelerometer and gryoscope wearable device. \\nWhen the user decide to train the action in mind, they simply record a video of themselves performing it. As the video is recorded the application simulationously records accelerometer data in the x y z direction for the duration of the video. \\nThe application then graphs the data out for the user and, using a dynamic time warping algorithm, categories the action as good or bad.\\nThe user can then determine if the algorithm's decision is correct, giving it more data to train off of in future iterations. *\\n\\nThe application works to become a sort of sports trainer in any activity, correcting the users form over time to help them perfect their technique. \\nHowever initially, it itself is instead trained by the user, giving the user an experience with training a machine learning model. \\nIn other words, the user first trains the user on what the correct action is, and afterward the application will continue to inform users on the state of their action.\\nThe application can give a new understand to the processes involved in machine learning while also help improve sports form and technique over time.  \\n\\nLink #### LPC Github Link #### https://github.com/LaboratoryForPlayfulComputation/AlpacaML\\n\\nLink #### Link to Interactive Prototype #### https://projects.invisionapp.com/share/NMPRYCYHFGR#/screens\\n\";","export default \"After graduating I moved on to work for Seagate Technology. Here I joined a team known as Lyve Pilot. \\nLyve Pilot worked on creating a platform where customers could securely move and manipulate data across devices and the cloud.*\\nAs a software engineering I was exposed to a number of different planning, coding and processing techniques and many new softwares. \\nBelow are a list of technologies I used while at Seagate *\\nLIST #### Vue.js #### Selenium #### VSCode #### Node.js #### Express.js #### Typescript #### Javascript #### Python #### MongoDB #### Scale Agile Framework #### Kubernetes #### Jira #### Sharepoint #### Teams #### RabbitMQ #### S3 #### Jenkins #### DockerAzure #### Redis #### SonarQube\";","import { render } from \"./individualProject.vue?vue&type=template&id=10916b57&scoped=true\"\nimport script from \"./individualProject.vue?vue&type=script&lang=js\"\nexport * from \"./individualProject.vue?vue&type=script&lang=js\"\n\nimport \"./individualProject.vue?vue&type=style&index=0&id=10916b57&scoped=true&lang=css\"\n\nimport exportComponent from \"/Users/varun/Documents/Website/varun-website-updated/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-10916b57\"]])\n\nexport default __exports__","var map = {\n\t\"./H3.png\": 5782,\n\t\"./alpaca.png\": 3055,\n\t\"./fractal.png\": 2550,\n\t\"./heartbeatChecker.png\": 6214,\n\t\"./munchmaps.png\": 4539,\n\t\"./seagate.png\": 361,\n\t\"./storyglow.png\": 219\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 699;"],"names":["class","_createElementVNode","id","_createElementBlock","name","$options","_toDisplayString","_hoisted_2","_hoisted_3","data","storyglowText","munchmapsText","fractalText","H3Text","heartbeatCheckerText","alpacaText","seagateText","current_url","mounted","this","build_project_page","beforeUpdate","console","log","computed","current_name","url","window","location","href","page_name","split","title_current_name","project_name","charAt","toUpperCase","slice","main_img","base_url","images","require","methods","project_name_description","temp","document","getElementById","textContent","project_description_string","project_array","i","length","media_objects","includes","create_link_object","create_frame_object","create_list_object","p","createElement","innerHTML","appendChild","frame_div","width","style","textAlign","frame","src","height","setAttribute","a","link_div","text","createTextNode","title","append","list_div","display","justifyContent","list_number","Math","round","ul_array","j","push","correct_array","floor","selected_ul","li","k","__exports__","render","map","webpackContext","req","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports"],"sourceRoot":""}