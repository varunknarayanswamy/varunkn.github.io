{"version":3,"file":"js/96.d34a683f.js","mappings":"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","sources":["webpack://varun-website-updated/./src/views/projectTightRope.vue","webpack://varun-website-updated/./src/assets/project_tightrope/code_files/woz_1.txt","webpack://varun-website-updated/./src/assets/project_tightrope/code_files/woz_2.txt","webpack://varun-website-updated/./src/assets/project_tightrope/code_files/woz_3.txt","webpack://varun-website-updated/./src/components/widgets/slideshow.vue","webpack://varun-website-updated/./src/components/widgets/slideshow.vue?90e5","webpack://varun-website-updated/./src/views/projectTightRope.vue?b8d7"],"sourcesContent":["<template>\n  <div class=\"container\">\n    <!-- <iframe style=\"border: 1px solid rgba(0, 0, 0, 0.1);\" onload=\"this.width=screen.width-100;this.height=screen.height;\" src=\"https://www.figma.com/embed?embed_host=share&url=https%3A%2F%2Fwww.figma.com%2Fproto%2FYMt6LSZGrnwEE9iW6f0V4D%2FWebpage%3Fpage-id%3D0%253A1%26type%3Ddesign%26node-id%3D0-1%26viewport%3D-567%252C-2041%252C0.18%26t%3D6LigpQb20GFEuMoP-1%26scaling%3Dmin-zoom%26mode%3Ddesign\" allowfullscreen=\"true\"></iframe> -->\n  <div class=\"section hero_section\">\n    <h1>Project Tightrope</h1>\n    <!-- <div class=\"hero_img_set\">\n      <div class=\"hero_image\"></div>\n    </div> -->\n    <slideshow \n      :imageUrls=\"main_images\"\n      :numberOfImages=\"2\"\n      :autoPlay=\"true\">\n    </slideshow>\n    <div class=\"header_text\"> A walk-up-and-play style multiplayer videogame, that teaches players about the physical/mental experience of anxiety and display the importance of community support. </div>\n    <div style=\"text-align: left; align-self: left;\">\n    <h2>Members</h2>\n    <ul>\n      <li><b>Varun Narayanswamy</b></li>\n      <li>Samantha Ting</li>\n      <li>Annie Song</li>\n      <li>Husna Tabbassun</li>\n    </ul>\n    <h2>Timeline</h2>\n    <p>This project originated from the Prototyping Studio course in the Master's program for Human-Computer Interaction and Design.<b>(MHCI+D)</b>. It ran from January 2024 to March 2024 <b>(11 weeks)</b></p>\n  </div>\n    </div>\n\n    <div class=\"section situation\"> \n      <div class=\"header\" style=\"margin: auto\">\n        <h1>The Situation</h1>\n        <p>This project was assigned in prototyping studio course. We were asked to make a game that fit the following criteria: </p>\n      </div>\n      <div class=\"cards_obj\">\n        <div class=\"card green_container\">\n          <h2>Multiplayer</h2>\n          <p>The game needed to include some form of multiplayer element. This game should be an experience to share.</p>\n        </div>\n        <div class=\"card green_container\">\n          <h2>Walk Up and Play</h2>\n          <p>The game shouldnâ€™t require previous exposure and should friendly to a different players independent. </p>\n        </div>\n        <div class =\"card green_container\">\n          <h2>Custom Controller</h2>\n          <p>The game should include at least 1 custom made controller. The controller should be large and fun, compelling in of itself.</p>\n        </div>\n        <div class =\"card green_container\">\n          <h2>Social Issue</h2>\n          <p>The game should make a statement on a social issue. Players should leave feeling informed and motivated to make changes going forward.</p>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"green_container section research_ideation\"> \n      <div class=\"header\">\n        <h1>Research and Ideation</h1>\n      </div>\n      <div>\n        <h2>INITIAL RESEARCH</h2>\n        <p>From our initial research, we focused on anxiety and mental health. \n          We designed a controller where the main player uses a balancing board and rod to dodge obstacles, \n          simulating the physical and mental experience of anxiety. The following are the key tenants we utilized in our design</p>\n          <!-- <div class=\"flex_spacing_MD\">\n            <div style=\"width: 47%; max-width: 505px;\">\n              <img style=\"width: 100%; object-fit: cover;\" src=\"../assets//project_tightrope/research_1.png\">\n              <h3>The Importance of Physicality</h3>\n              <div>The Feeling Pressured activity at Exploratorium SF simulates pressure from anxiety and health challenges using a vacuum-sealed bag.This inspired us to consider using physical simulation to convey our message when designing our game. </div>\n            </div>\n            <div style=\"width: 47%; max-width: 505px;\">\n              <img style=\"width: 100%; object-fit: cover;\" src=\"../assets/project_tightrope/research_2.png\">\n              <h3>The use of metaphors and abstraction</h3>\n              <p>We then shared our ideas out, asking our classmates for feedback and opinions on our varying ideas</p>\n            </div>\n            <div style=\"width: 100%; max-width: 505px;\">\n              <img style=\"width: 100%; object-fit: cover;\" src=\"../assets/project_tightrope/research_3.png\">\n              <h3>The role of haptic feedback</h3>\n              <p>Our team took our classmates feedback and after many rounds of discussing, dot voting, and refining we generated our idea - <b>Project Tightrope.</b></p>\n            </div> -->\n          <!-- <img style=\"width: 47%; object-fit: cover;\" src=\"../assets/project_tightrope/planning_2.png\">\n          <img style=\"width: 30%; object-fit: cover;\" src=\"../assets/project_tightrope/board_1.jpg\"> -->\n          <!-- </div> -->\n        <div class = \"initial_research_circles\">\n          <div class=\"research_circles\">\n            <img src=\"../assets/project_tightrope/game1.png\">\n            <p>The value of a physically embodied experience</p>\n          </div>\n          <div class=\"research_circles\">\n            <img src=\"../assets/project_tightrope/game2.png\">\n            <p>A low learning curve is essential to the walk up and play style model</p>\n          </div>\n          <div class=\"research_circles\">\n            <img src=\"../assets/project_tightrope/game3.png\">\n            <p>When covering serious topics, metaphors and abstraction can be valuable to conveying important sentiments</p>\n          </div>\n        </div>\n      </div>\n      <div>\n        <h2>IDEATION</h2>\n        <p>After completing our desk research we built out a number of projects, all that focused either on social issues, interesting controllers, multiplayer interactions, or emmersive feelings. </p>\n          <div class=\"flex_spacing_MD\">\n            <div style=\"width: 47%;\">\n              <img style=\"width: 100%; object-fit: cover;\" src=\"../assets//project_tightrope/big_img.png\">\n              <p>We designed several ideas, using the opportunity to explore AI image generation and explain them to our classmates.</p>\n            </div>\n            <div style=\"width: 47%;\">\n              <img style=\"width: 100%; object-fit: cover;\" src=\"../assets/project_tightrope/board.jpg\">\n              <p>We then shared our ideas out, asking our classmates for feedback and opinions on our varying ideas</p>\n            </div>\n            <div style=\"width: 100%\">\n              <img style=\"width: 100%; object-fit: cover;\" src=\"../assets/project_tightrope/planning_1.png\">\n              <p>Our team took our classmates feedback and after many rounds of discussing, dot voting, and refining we generated our idea - <b>Project Tightrope.</b></p>\n            </div>\n          <!-- <img style=\"width: 47%; object-fit: cover;\" src=\"../assets/project_tightrope/planning_2.png\">\n          <img style=\"width: 30%; object-fit: cover;\" src=\"../assets/project_tightrope/board_1.jpg\"> -->\n          </div>\n\n      </div>\n    </div>\n    <div class=\"white_container section WOZ_testing\"> \n      <div class=\"header_section\">\n      <h1>WOZ Testing</h1>\n      <p>After refining and validating our idea, we conducted three Wizard of Oz (WOZ) testing sessions. We developed the on-screen game elements while simulating the controllers, which allowed us to progress on the game code, test controllers for players 2 and 3, and assess our message's effectiveness.</p>\n      </div>\n\n      <div class=\"woz_test\">\n        <h2>PROTOTYPE 1 - TILT MECHANISM</h2>\n        <p>The first prototype tested player 1's tilting mechanism. During gameplay, bat obstacles representing stress and responsibilities flew down from the top of the screen, and the player character could move left and right to dodge them.</p>\n        <div class=\"woz_obj\">\n          <div class=\"code_obj\">\n            <pre v-html=\"woz_text_1\"></pre>\n          </div>\n          <img src=\"../assets/project_tightrope/woz_1.gif\">\n        </div>\n      </div>\n      <div class=\"woz_test\">\n        <h2>PROTOTYPE 2 - SWATTING MECHANISM</h2>\n        <p>The second prototype tested a swatting mechanism for the second and third players. During gameplay, bat obstacles from the first prototype moved in from the left and right.</p>\n        <div class=\"woz_obj\">\n          <img src=\"../assets/project_tightrope/woz_2.gif\">\n          <div class=\"code_obj\">\n            <pre v-html=\"woz_text_2\"></pre>\n          </div>\n        </div>\n      </div>\n      <div class=\"woz_test\">\n        <h2>PROTOTYPE 3 - FLAPPING MECHANISM</h2>\n        <p>The final prototype tested a flapping motion for the second and third players. During gameplay, the players flapped in unison to move the character closer to the cliff face. </p>\n        <div class=\"woz_obj\">\n          <div class=\"code_obj\">\n            <pre v-html=\"woz_text_3\"></pre>\n          </div>\n          <img src=\"../assets/project_tightrope/woz_3.gif\">\n        </div>\n      </div>\n      <div class=\"finding_object\">\n        <h2>FINDINGS</h2>\n        <div class=\"findings\">\n          <div class=\"finding\">\n            <h3>Narration Changes</h3>\n            <p>No more bats! We switched the bats to  orbs.\n              Light Orbs represented positivity and was something to collect. \n              Dark orbs represented negativity and were something to avoid. </p>\n          </div>\n          <div class=\"finding\">\n            <h3>Player 2/3 Controller</h3>\n            <p>Player 1 will continue to use the balancing rod and board. \n            Their task now will be to collect light orbs and avoid dark orbs.  </p>\n          </div>\n          <div class=\"finding\">\n            <h3>Player 3 Controller</h3>\n            <p>Player 2 and player 3 will use wing controllers and continue to use the swatting mechanism, \n            and moving light orbs towards player 1, and dark orbs away from them.  </p>\n          </div>\n        </div>\n      </div>\n  </div>\n  <div class=\"green_container section idea_refinement\">\n    <div class=\"header\">\n      <h1>Design Iterations</h1>\n      <p>After completing the WOZ testing the next steps was to build out the game.\n        This included refining the fidelity of hardware and software</p>\n    </div>\n    <div class=\"hardware\">\n      <h2>HARDWARE ITERATIONS</h2>\n      <div class=\"grid_template_2r\">\n        <div id=\"wings_iterations\">\n          <h3>Wing Iterations</h3>\n          <slideshow style=\"width: 95%\" :autoPlay=\"false\" :imageUrls=\"wing_images\" :textUrls=\"wing_text\" :numberOfImages=\"3\"></slideshow>\n        </div>\n        <div id=\"rod_iterations\">\n          <h3>Rod Iterations</h3>\n          <slideshow style=\"width: 95%\" :autoPlay=\"false\" :imageUrls=\"rod_images\" :textUrls=\"rod_text\" :numberOfImages=\"3\"></slideshow>\n        </div>\n      </div>\n    </div>\n    <div class=\"software\">\n      <h2>SOFTWARE FEATURES</h2>\n      <div class=\"grid_template\">\n        <div class=\"software_update\" id=\"initial_story\">\n          <h3>Inital Story</h3>\n          <img src=\"../assets/project_tightrope/storytelling_quick.gif\" style=\"border-radius: 20px; width: 90%\">\n          <p>I created story segments before gameplay to explain our messaging and metaphor in a hope of bridging the abstraction.</p>\n        </div>\n        <div class=\"software_update\" id=\"wings_iterations\">\n          <h3>Tutorial Content</h3>\n          <img src=\"../assets/project_tightrope/tutorial_quick.gif\" style=\"border-radius: 20px; width: 90%\">\n          <p>I added game states for the tutorial to let players test their controllers before gameplay.</p>\n        </div>\n        <div class=\"software_update\" id=\"audio_input\">\n          <h3>Custom Audio Input</h3>\n          <iframe src=\"https://www.youtube.com/embed/OXjUl4lk9WI?si=CncVk3WJ-tt5TAjz\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" referrerpolicy=\"strict-origin-when-cross-origin\" allowfullscreen></iframe>\n          <p>Using P5's built-in mic, player 1 recorded sound effects for positive and negative orb hits,\n             making the gameplay more personal.</p>\n          <!-- <video  width= \"400\" style=\"border-radius: 20px\">\n            <source src=\"../assets/project_tightrope/audio_recording.mp4\" type=\"video/mp4\">\n          </video> -->\n        </div>\n        <div class=\"software_update\" id=\"player_1_control\">\n          <h3>Player 1 Controls</h3>\n          <img src=\"../assets/project_tightrope/p1.gif\" style=\"border-radius: 20px; width: 90%\">\n          <p>I synced the controller with player 1's CPX. The board's tilt triggered key presses to move the in-game character. </p>\n        </div>\n        <div class=\"software_update\" id=\"player_2_control\">\n          <h3>Player 2 Controls</h3>\n          <img src=\"../assets/project_tightrope/p2.gif\" style=\"border-radius: 20px; width: 90%\">\n          <p>Shaking player 2 and 3 wings (with CPX boards) triggers one of four keys, moving the wing in-game and transferring nearby emotion orbs. </p>\n        </div>\n        <div class=\"software_update\" id=\"ending_sequence\">\n          <h3>Ending Sequence</h3>\n          <img src=\"../assets/project_tightrope/ending_sequence.gif\" style=\"border-radius: 20px; width: 90%\">\n          <p>After collecting more positive than negative orbs, the player sees a celebratory screen with a conclusion and support link.</p>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"white_container section showcase\">\n      <h1>Showcase</h1>\n      <iframe src=\"https://www.youtube.com/embed/DoGYisWcmu8?si=PPjT6fK4Aat2n2zx\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" referrerpolicy=\"strict-origin-when-cross-origin\" allowfullscreen></iframe>\n      <!-- <div class=\"grid_template\">\n        <img src=\"../assets/project_tightrope/p2.gif\" style=\"border-radius: 20px; width: 90%\">\n        <img src=\"../assets/project_tightrope/p2.gif\" style=\"border-radius: 20px; width: 90%\">\n        <img src=\"../assets/project_tightrope/p2.gif\" style=\"border-radius: 20px; width: 90%\">\n        <img src=\"../assets/project_tightrope/p2.gif\" style=\"border-radius: 20px; width: 90%\">\n        <img src=\"../assets/project_tightrope/p2.gif\" style=\"border-radius: 20px; width: 90%\">\n        <img src=\"../assets/project_tightrope/p2.gif\" style=\"border-radius: 20px; width: 90%\">\n        <img src=\"../assets/project_tightrope/p2.gif\" style=\"border-radius: 20px; width: 90%\">\n        <img src=\"../assets/project_tightrope/p2.gif\" style=\"border-radius: 20px; width: 90%\">\n\n      </div> -->\n  </div>\n  <div>\n    \n  </div>\n  </div>\n</template>\n<script>\nimport woz_text_1 from 'raw-loader!../assets/project_tightrope/code_files/woz_1.txt';\nimport woz_text_2 from 'raw-loader!../assets/project_tightrope/code_files/woz_2.txt';\nimport woz_text_3 from 'raw-loader!../assets/project_tightrope/code_files/woz_3.txt';\nimport slideshow from '../components/widgets/slideshow.vue';\nexport default {\n  name: 'projectTightRope',\n  components: { slideshow },\n  data() {\n      return {\n        width_val: window.innerWidth,\n        height_val: window.innerHeight,\n        woz_text_1: woz_text_1,\n        woz_text_2: woz_text_2,\n        woz_text_3: woz_text_3,\n        main_images: [\"/assets/tv_screen.png\", \"/assets/playing.png\"],\n        wing_images: [\"/assets/wings1.png\", \"/assets/wings2.png\", \"/assets/wings3.png\"],\n        wing_text: [\"Our first test version made of cardboard, used to test the swiping motion\", \n        \"The refined the design for WOZ testing using foam core, color coded for each of the players\", \n        \"For the final design, we paper-mached the wings, centered the CPX inside, and glued the wings to hide cords and electronics\"],\n        rod_images: [\"/assets/rod_1.png\", \"/assets/rod_2.png\", \"/assets/rod_3.png\"],\n        rod_text: [\"Our first test version made of a random rod taped with the CPX, used to test the tilting motion\", \n        \"The WOZ design used a larger rod that was better balanced, including cardboard holder for the CPX\", \n        \"The final design uses the same rod, but instead included a 3D printed CPX holder with cloth that covers the CPX fdrom view\"],\n      };\n    },\n  computed: {\n    woz1Code() {\n      console.log(\"hello\");\n      console.log(this.woz_text_1);\n      return this.woz_text_1;\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\">\n\n.container {\n    width: 100%;\n    background-color: black;\n    padding-top: 2%;\n    padding-bottom: 2%;\n  }\n\n  .situation {\n    background-color: white;\n    color: #131315;\n  }\n  p {\n    font-size: 20px;\n    //color: black;\n  }\n  li {\n    font-size: 20px;\n  }\n  .header_text {\n    font-size: 30px;\n    font-weight: bold;\n  }\n\n  .hero_img_set{\n    display: relative;\n    width: 100%;\n    height: auto;\n  }\n\n  .hero_image {\n    display: inline-block;\n    position: relative;\n    background-image: url(\"../assets/project_tightrope/main_image.png\");\n    width: 100%;\n    aspect-ratio: 1/1;\n    background-size: cover;\n    margin-left: auto;\n    margin-right: auto;\n    margin-bottom: 2%;\n  }\n  .corner_img {\n    //position: absolute;\n    width: 30%;\n    aspect-ratio: 2/3;\n    transform: translate(185%, -50%);\n    background-size: cover;\n    background-image: url(\"../assets/project_tightrope/corner_img_square.png\");\n  }\n  .section {\n    padding-left: 10%;\n    padding-right: 10%;\n    padding-top: 5%;\n    padding-bottom: 5%;\n    margin-left: 10%;\n    margin-right: 10%;\n    margin-top: 5%;\n    margin-bottom: 5%;\n    border-radius: 20px;\n  }\n  .hero_section {\n    background-color: #131315;\n    color: #ffebe8;\n    h1 {\n      color: #ffebe8;\n      font-size: 50px;\n    }\n    display: flex;\n    flex-direction: column;\n    gap: 60px;\n  }\n\n  .WOZ_testing, .research_ideation, .idea_refinement, .showcase{\n    text-align: left;\n    display: flex;\n    flex-direction: column;\n    gap: 30px;\n  }\n  .woz_test {\n    color: #ffebe8;\n    margin-top: 50px;\n  }\n\n  .woz_obj {\n    //display: grid;\n    display: flex;\n    //@at-rootgrid-template-columns: 1fr 1fr;\n    flex-direction: row;\n    gap: 50px;\n    justify-content: space-around;\n    // margin-left: 5%;\n    // margin-right: 5%;\n    align-items: flex-start;\n    p {\n      //width: 50%;\n      margin: 0px;\n    }\n    img {\n      border-radius: 5px;\n      height: 400px;\n      width: 100%;\n     // width: 70%;\n    }\n  }\n\n  .code_obj {\n    width: 100%; \n    height: 400px;\n    background-color: black;\n    overflow: scroll;\n    pre {\n      color: white;\n    }\n  }\n\n  .white_container {\n    background-color: #fff1ee;\n    color: #2B2D34;\n    p {\n      color: #2B2D34;\n    }\n    h2 {\n      color: #2B2D34;\n    }\n    h3 {\n      color: #2B2D34;\n    }\n  }\n\n  .green_container {\n    background-color: #131315;\n    //8E6A70\n    //old color = 014A39\n    //2B2D34\n    color: #ffebe8;\n    h1 {\n      color: ffebe8;\n    }\n  }\n\n  .two_column_view {\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n  }\n\n  .card {\n    width: 350px;\n    aspect-ratio: 1/1;\n    border-radius: 2000px;\n    border-style: solid;\n    border-color: #2B2D34;\n    margin: 2px;\n    p {\n      margin-left: 10%;\n      margin-right: 10%;\n    }\n    h2 {\n      margin-top: 25%;\n      margin-left: 5%;\n      margin-right: 5%;\n    }\n  }\n\n  .situation {\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    align-items: flex-start;\n  }\n\n  .cards_obj {\n    margin-top: 2%;\n    gap: 50px; \n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    max-width: 80%;\n    // display: flex;\n    // flex-direction: row;\n    // justify-content: space-around;\n    // flex-wrap: wrap;\n    margin: auto;\n  }\n\n  .flex_spacing_\n\n  .flex_spacing_FS {\n    display: flex;\n    flex-direction: row;\n    justify-content: flex-start;\n    flex-wrap: wrap;\n    gap: 200px;\n    width: 100%;\n  }\n\n  .grid_template_2r {\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n  }\n\n  .grid_template {\n    display: grid;\n    grid-template-columns: 1fr 1fr 1fr;\n  }\n\n  @media (max-width: 1570px) {\n    .grid_template {\n      grid-template-columns: 1fr 1fr;\n    }\n  }\n\n  @media (max-width: 1025px) {\n    .grid_template {\n      grid-template-columns: 1fr;\n    }\n  }\n\n  .flex_spacing_SB {\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    flex-wrap: wrap;\n    gap: 10px;\n    width: 100%\n  }\n\n  .flex_spacing_MD {\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    flex-wrap: wrap;\n    gap: 50px;\n    width: 100%\n  }\n\n  .software, .hardware {\n    margin-top: 50px;\n    margin-bottom: 50px;\n\n    iframe {\n      width: 90%;\n      aspect-ratio: 40/27;\n    }\n\n  }\n\n  iframe {\n      width: 90%;\n      aspect-ratio: 40/27;\n    }\n\n  .software_update {\n    width: 100%;\n    p {\n      width: 90%; \n      text-align: center;\n    }\n  }\n\n  .initial_research_circles {\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    flex-wrap: wrap;\n    gap: 20px;\n    width: 100%;\n  }\n\n  .research_circles {\n    display: flex;\n    align-items: center;\n    flex-direction: column;\n  }\n\n  .findings {\n    display: grid;\n    grid-template-columns: 1fr 1fr 1fr;\n  }\n  .finding {\n    width: 90%;\n  }\n\n  // .change_1 {\n  //   background-image: url(\"../assets/project_tightrope/change_1.png\");\n  // }\n  // .change_2 {\n  //   background-image: url(\"../assets/project_tightrope/change_2.png\");\n  // }\n  // .change_3 {\n  //   background-image: url(\"../assets/project_tightrope/change_3.png\");\n  //   width: 350px !important;\n  // }\n\n  .change_obj {\n    background-size: cover;\n    aspect-ratio: 1 / 1;\n    width: 350px;\n\n    .p {\n      border-radius: 2000px;\n    }\n  }\n</style>","export default \"let backgroundImg;\\nlet boy;\\nlet rotationAngle = 0; \\nlet boy_x = -100;\\nlet boy_y = 0;\\nlet batArray = [];\\nlet dodgeSound;\\nlet start_button;\\nlet game_state = \\\"start\\\";\\n\\nfunction setup() {\\n  createCanvas(800, 550);\\n  angleMode(DEGREES);\\n  start_button = createButton('start');\\n  start_button.size(200, 100); \\n  start_button.position(width / 2 - start_button.width / 2, height / 2 -   start_button.height / 2);\\n  start_button.style('font-size', '20px');\\n  start_button.mousePressed(onButtonClick);\\n}\\n\\nfunction draw() {\\n  background(backgroundImg);\\n  \\n  if (game_state == \\\"playing\\\"){\\n    for (let i = 0; i<batArray.length; i++) {\\n      if (batArray[i].y_position > height) {\\n        batArray.splice(i, 1);\\n      } else {\\n      batArray[i].move();\\n      batArray[i].display();\\n      }\\n    }\\n    if (keyIsPressed) {\\n      if(keyCode == LEFT_ARROW) {\\n        rotate_character(-45);\\n        //dodgeSound.play();\\n      } else if(keyCode == RIGHT_ARROW) {\\n        rotate_character(45);\\n          //dodgeSound.play();\\n      }\\n    }\\n    if (frameCount % 90 === 0) {\\n      if (random() > 0.5) {\\n        //batArray.push(new Enemy(-70, random(height - 70)));\\n        batArray.push(new batEnemy(width/2-70, 0));\\n      } else {\\n        //batArray.push(new Enemy(width, random(height - 70)));\\n        batArray.push(new batEnemy(width/2+70, 0));\\n      }\\n    }\\n  }\\n  \\n  push();\\n  //imageMode(CENTER);\\n  translate(width/2, height-50);\\n  rotate(rotationAngle);\\n  image(boy, boy_x, -150, 200, 200);\\n  pop();\\n  //console.log(\\\"angle: \\\" + rotationAngle);\\n  \\n//   let x1 = (width/2-100) + ((-100) * cos(rotationAngle) - (100) * sin(rotationAngle))\\n//   let y1 = (height-200) + ((-100) * sin(rotationAngle)  + (100) * cos(rotationAngle))\\n//   let x2 = (width/2+100) + ((100) * cos(rotationAngle) - (100) * sin(rotationAngle))\\n//   let y2 = (height-100) + ((100) * sin(rotationAngle)  - (100) * cos(rotationAngle))\\n//   console.log()\\n//     //console.log(\\\"x: \\\" + x1);\\n  \\n//   console.log(\\\"y: \\\" + y1);\\n\\n}\\n\\nfunction onButtonClick() {\\n  start_button.hide();\\n  bgm.play();\\n  bgm.setVolume(0.1);\\n  bgm.loop();\\n  // Add your code here to be executed when the button is clicked\\n  game_state = \\\"playing\\\";\\n}\\n\\n\\nfunction hitHappened(x, y) {\\n  if (dist(boy)) {\\n    \\n  }\\n}\\n\\nfunction preload() {\\n  backgroundImg = loadImage('assets/background_img.jpg');\\n  boy = loadImage('assets/da_boy.png');\\n  \\n  soundFormats(\\\"mp3\\\");\\n  dodgeSound = loadSound('assets/whoosh_sound_effect');\\n  bgm = loadSound('assets/in-deep-distress-112438')\\n}\\n\\nfunction rotate_character(targetAngle) {\\n    let easing = 0.1;\\n    let diff = targetAngle - rotationAngle;\\n    if (abs(diff) > 1) {\\n      rotationAngle += diff * easing;\\n    } else {\\n        rotationAngle = targetAngle;\\n    }\\n}\\n\\nclass batEnemy {\\n  constructor(x, y) {\\n    this.batImg = loadImage('assets/evil_bat.png');\\n    this.x_position = x;\\n    this.y_position = y;\\n  }\\n  \\n  get_y_position() {\\n    return this.y_position;\\n  }\\n  \\n  display() {\\n    push();\\n    imageMode(CENTER);\\n    image(this.batImg, this.x_position, this.y_position, 60, 60);\\n    pop();\\n  }\\n  \\n  move() {\\n    this.y_position += 2;\\n  }\\n} \";","export default \"//global variables\\nlet scalar = 1.0001;\\nlet width_object;\\nlet height_object;\\nlet old_width;\\nlet old_height;\\nlet width_difference = 0;\\nlet height_difference = 0;\\nlet game_ended = false;\\nlet font_custom;\\nlet game_state = 'prestart';\\nlet start_button;\\n\\n\\n// assets\\nlet cliff;\\nlet background_img;\\nlet boy;\\nlet yellow_wing;\\nlet pink_wing;\\nlet rope;\\nlet whoosh;\\nlet bgm;\\n\\n\\nfunction preload() {\\n  cliff = loadImage('assets/cliff.jpg');\\n  background_img = loadImage('assets/starry_night.jpg')\\n  font_custom = loadFont('AgendaKing.otf');\\n  yellow_wing = new wing('assets/yellow_wing.png', 0, 0, -30);\\n  pink_wing = new wing('assets/pink_wing.png', -200, 0, 30);\\n  boy = loadImage('assets/da_boy.png');\\n  rope = loadImage('assets/rope.png');\\n  \\n  //sounds\\n  soundFormats(\\\"mp3\\\");\\n  whoosh = loadSound('assets/whoosh_sound_effect');\\n  bgm = loadSound('in-deep-distress-112438.mp3');\\n  \\n  \\n}\\n\\n\\nfunction setup() {\\n  createCanvas(800, 800);\\n  width_object = width;\\n  height_object = 2*height/3;\\n  angleMode(DEGREES)\\n  \\n  start_button = createButton('start');\\n  start_button.size(200, 100); \\n  start_button.position(width / 2 - start_button.width / 2, height / 2 -   start_button.height / 2);\\n  start_button.style('font-size', '20px');\\n  start_button.mousePressed(onButtonClick);\\n  //textFont(font_custom);\\n}\\n\\nfunction draw() {\\n  background(background_img);\\n  if (game_state == 'playing') {\\n    moveTowardsCliff();\\n\\n    push();\\n    translate(width/2+100, 600);\\n    rotate(yellow_wing.rotationAngle);\\n    yellow_wing.display()\\n    pop();\\n\\n    push();\\n    translate(width/2-100, 600);\\n    rotate(pink_wing.rotationAngle);\\n    pink_wing.display();\\n    pop();\\n\\n    yellow_wing.rotateWing();\\n    pink_wing.rotateWing();\\n  }\\n}\\n\\n\\nfunction onButtonClick() {\\n  start_button.hide();\\n  bgm.play();\\n  bgm.setVolume(0.1);\\n  bgm.loop();\\n  // Add your code here to be executed when the button is clicked\\n  game_state = \\\"playing\\\";\\n}\\n\\nfunction moveTowardsCliff() {\\n  image(cliff, -width_difference/2, height_difference/2 + 2*height/3, width_object, height_object);\\n  image(rope, width/2-10, height_difference/2 + 2*height/3 - 40, 20, height_object+30);\\n  old_width = width_object;\\n  old_height = height_object;\\n  width_object = width_object * scalar;\\n  height_object = height_object * scalar;\\n  width_difference += width_object - old_width;\\n  height_difference += height_object - old_height;\\n  if (!game_ended) {\\n    if (keyIsDown(UP_ARROW)) {\\n      scalar = 1.002;\\n    }  else {\\n      scalar = 1.000;\\n    }\\n  }\\n  image(boy, width/2-60, height-230, 120, 120);\\n  if (width_difference > 300) {\\n    game_ended = true;\\n    scalar = 1;\\n    fill(255);\\n    textSize(20);\\n    textFont()\\n    let text_value = 'YOU MADE IT';\\n    let text_width = textWidth(text_value);\\n    text('YOU MADE IT', (width-text_width)/2, height/3);\\n  }\\n}\\n \\nclass wing {\\n  constructor(img_string, x, y, rotationTarget) {\\n    this.img = loadImage(img_string);\\n    this.x_position = x; \\n    this.y_position = y; \\n    this.beatState = 0;\\n    this.rotationTarget = rotationTarget;\\n    this.rotationAngle = 0;\\n  }\\n  display() {\\n    image(this.img, this.x_position, this.y_position, 200, 200);\\n  }\\n  \\n  set_state(state_number) {\\n    this.beatState = state_number;\\n  } \\n  \\n  rotateWing() {\\n    if (this.beatState == 1) {\\n      this.rotationAnimation(this.rotationTarget);\\n    } else if (this.beatState == 2) {\\n      this.rotationAnimation(0);\\n    }\\n  }\\n  rotationAnimation(targetAngle) {\\n    let easing = 0.3;\\n    let diff = targetAngle - this.rotationAngle;\\n    if (abs(diff) > 1) {\\n      this.rotationAngle += diff * easing;\\n    } else {\\n        this.rotationAngle = targetAngle;\\n      if (this.beatState == 1) {\\n        this.beatState = 2;\\n      } else if (this.beatState == 2) {\\n        this.beatState = 0;\\n      } \\n    }\\n  }\\n}\\n\\nfunction backgroundMusic(){\\n  \\n  bgm.play();\\n  bgm.loop();\\n  bgm.setVolume(0.3);\\n  userStartAudio();\\n}\\n\\nfunction keyPressed() {\\n  if (keyCode === UP_ARROW) {\\n    whoosh.play();\\n    whoosh.setVolume(0.1);\\n    whoosh.rate(2);\\n    value = 255;\\n    yellow_wing.set_state(1);\\n    pink_wing.set_state(1);\\n  } else if (keyCode === LEFT_ARROW) {\\n    whoosh.play();\\n    whoosh.setVolume(0.1);\\n    whoosh.rate(2);\\n    pink_wing.set_state(1);\\n  } else if (keyCode === RIGHT_ARROW) {\\n    whoosh.play();\\n    whoosh.setVolume(0.1);\\n    whoosh.rate(2);\\n    yellow_wing.set_state(1);\\n  }\\n}\";","export default \"let bats_caught = 0;\\nlet boy_hit = 0;\\nlet press_frame = 0;\\nlet jumpHeight = 20;\\nlet jumpDuration = 300; // in milliseconds\\nlet jumpStartTime;\\nlet leftJump = true;\\nlet batArray = [];\\nlet game_state = 'start';\\nlet start_button;\\n\\n//images\\nlet backgroundImg;\\nlet owl;\\nlet owlImg;\\nlet boy;\\nlet rope;\\n\\n//sound effects\\nlet attack_sound;\\nlet bat_sound;\\nlet bgm;\\n\\nfunction preload() {\\n  backgroundImg = loadImage('background_page.png');\\n  owlImg = loadImage('yellow_owl.png');\\n  boy = loadImage('da_boy.png');\\n  rope = loadImage('rope.png');\\n  \\n  soundFormats(\\\"mp3\\\");\\n  attack_sound = loadSound('attack_sound_effect');\\n  bat_sound = loadSound('bonk');\\n  bgm = loadSound('in-deep-distress-112438');\\n}\\n\\n\\nfunction setup() {\\n  createCanvas(800, 550);\\n  rectMode(CENTER);\\n  \\n  owl = {\\n    x: width / 2,\\n    y: 350,\\n    image_object: '',\\n    size: 20\\n  };\\n  \\n  start_button = createButton('start');\\n  start_button.size(200, 100); \\n  start_button.position(width / 2 - start_button.width / 2, height / 2 -   start_button.height / 2);\\n  start_button.style('font-size', '20px');\\n  // Attach a function to be called when the button is clicked\\n  start_button.mousePressed(onButtonClick);\\n}\\n\\nfunction draw() {\\n  background(backgroundImg);\\n  \\n  if (game_state == 'playing') {\\n    image(rope, width/2+35, -100, 15, height+100)\\n    image(boy, width/2-50, height-150, 200, 200);\\n\\n    fill(255);\\n    text(\\\"Bats hit: \\\" + bats_caught, 20, 20);\\n\\n    fill(255);\\n    text(\\\"The boy has been hit: \\\" + boy_hit, 20, 35);\\n\\n    owl_batting();\\n\\n    for (let j = 0; j < batArray.length; j++) {\\n      batArray[j].update();\\n      batArray[j].display();\\n\\n      // Remove batArray that are off-screen\\n      if (batArray[j].reachedMiddle()) {\\n        boy_hit += 1;\\n        batArray.splice(j, 1);\\n      }\\n    }\\n\\n    // Create batArray at random intervals from the left and right\\n    if (frameCount % 60 === 0) {\\n      if (random() > 0.5) {\\n        //batArray.push(new Enemy(-70, random(height - 70)));\\n        batArray.push(new batEnemy(true));\\n      } else {\\n        //batArray.push(new Enemy(width, random(height - 70)));\\n        batArray.push(new batEnemy(false));\\n      }\\n    }\\n  }\\n}\\n\\nfunction onButtonClick() {\\n  start_button.hide();\\n  bgm.play();\\n  bgm.setVolume(0.1);\\n  bgm.loop();\\n  // Add your code here to be executed when the button is clicked\\n  game_state = \\\"playing\\\";\\n}\\n\\nfunction slap_check() {\\n  for (let i = 0; i < batArray.length; i++) {\\n   // console.log(batArray[i].get_x_position());\\n    if (dist(owl.x, 450, batArray[i].get_x_position(), 450) < 40) {\\n      console.log(\\\"collision\\\");\\n      bat_sound.play();\\n      bat_sound.setVolume(0.3);\\n      batArray.splice(i, 1);\\n      bats_caught  += 1;\\n    }\\n  }\\n}\\n\\nfunction owl_batting() {\\n  owl.image_object = image(owlImg, owl.x, owl.y, 80, 80);\\n  \\n  if (jumpStartTime && millis() - jumpStartTime < jumpDuration) {\\n    // Calculate the progress of the jump\\n    if (leftJump) {\\n      owl.x -= 10;\\n      slap_check();\\n    } else {\\n      owl.x += 10;\\n      slap_check();\\n    }\\n  } else {\\n    // If not in the jump phase, simulate gravity to bring the owl down\\n    if (leftJump) {\\n      owl.x += 10;\\n    } else {\\n      owl.x -= 10;\\n    }\\n    \\n    \\n    // Reset the owl's position when it reaches the ground\\\\\\n    if ((owl.x >= width/2 && leftJump) || (owl.x <= width/2 && !leftJump)) {\\n      owl.x = width/2;\\n    } else {\\n      slap_check();\\n    }\\n  }\\n}\\n\\nfunction keyPressed() {\\n  // Check if the owl is on the ground before allowing a jump\\n  if (owl.x === width/2) {\\n    jumpStartTime = millis(); \\n    if (keyCode == LEFT_ARROW) {\\n      leftJump = true;\\n      attack_sound.play();\\n      attack_sound.setVolume(0.3);\\n    } else if (keyCode == RIGHT_ARROW) {\\n      leftJump = false;\\n      attack_sound.play();\\n      attack_sound.setVolume(0.3);\\n    }\\n    // Set the jump start time\\n    // Give the owl an initial upward velocity for the jump\\n  }\\n}\\n\\nclass batEnemy {\\n  constructor(left) {\\n    this.batImg = loadImage('evil_bat.png');\\n    this.left = left;\\n    this.y_position = 350;\\n    if (left) {\\n      this.x_position = -70;\\n    } else {\\n      this.x_position = width;\\n    }\\n    this.width = 80;\\n    this.height = 80;\\n    this.speed = 5;\\n  }\\n  \\n   update() {\\n    // Move towards the middle of the canvas\\n    let targetX = width / 2;\\n    if (this.x_position < targetX && this.left == true) {\\n      this.x_position += this.speed;\\n    } else if (this.x_position > targetX && this.left == false) {\\n      this.x_position -= this.speed;\\n    }\\n  }\\n  \\n  display() {\\n    fill(255, 0, 0);\\n    //rect(this.x, this.y, this.width, this.height);\\n    image(this.batImg, this.x_position, this.y_position, this.width, this.height);\\n  }\\n\\n  get_x_position() {\\n    return this.x_position;\\n  }\\n  get_y_position() {\\n    return this.y_position;\\n  }  \\n  // offScreen() {\\n  //   // Check if the enemy is off-screen\\n  //   return this.x_position > width || this.x_position + this.width < 0;\\n  // }\\n  \\n  reachedMiddle() {\\n    // Check if the enemy reached the middle of the canvas\\n    return abs(this.x_position - width / 2) < 10;\\n  }\\n }\\n\";","<template>\n    <div class=\"slideshow\">\n      <div v-if=\"imagePaths.length > 0\" class=\"image-container\">\n        <transition :name=\"transitionName\" mode=\"out-in\">\n          <div class=\"container\">\n            <img :src=\"imagePaths[currentIndex]\" alt=\"Slideshow Image\" class=\"slideshow-image\" :key=\"imagePaths[currentIndex]\"/>\n            <div v-if=\"textUrls\" v-text=\"textUrls[currentIndex]\"></div>\n          </div>\n      </transition>\n      </div>\n      <div v-else class=\"no-images\">\n        No images available.\n      </div>\n      \n      <div class=\"controls\" v-if=\"showControls\">\n        <button @click=\"clickPrev\">Previous</button>\n        <button @click=\"handlePauseClick\">{{ isPaused ? 'Resume' : 'Pause' }}</button>\n        <button @click=\"clickNext\">Next</button>\n      </div>\n    </div>\n  </template>\n  \n  <script>\n  export default {\n    name: 'slide-show',\n    props: {\n      imageUrls: {\n        type: Array,\n        required: true,\n      },\n      textUrls: {\n        type: Array,\n        required: false\n      },\n      autoPlay: {\n        type: Boolean,\n        default: false,\n      },\n      autoPlayInterval: {\n        type: Number,\n        default: 5000, // Default 3 seconds between transitions\n      },\n      numberOfImages: {\n        type: Number,\n        required: true,\n      },\n      showControls: {\n        type: Boolean,\n        default: true\n      }\n    },\n    data() {\n      return {\n        currentIndex: 0,\n        imagePaths: [],\n        disableTransition: false,\n        autoPlayTimer: null,\n        isPaused: false\n      };\n    },\n    mounted() {\n      this.imagePaths = this.imageUrls.map((image) => {\n        // console.log(\"in here\")\n        // console.log(image)\n        // console.log(require(`@/assets/${image}`))\n       // return \"../../assets/\" + image;\n       return image;\n        //return require(`@/assets/${image}`);\n      });\n      \n       // Start autoplay if autoPlay is true\n    if (this.autoPlay) {\n      this.startAutoPlay();\n    }\n    },\n    computed: {\n      images() {\n        return this.imageUrls.slice(0, this.numberOfImages);\n      },\n      transitionName() {\n        // Return 'fade' if transition is not disabled, otherwise empty (no transition)\n        console.log(this.disableTransition)\n        return this.disableTransition ? '' : 'fade';\n      }\n    },\n    methods: {\n      clickPrev() {\n        this.disableTransition = true;\n        this.prevImage()\n        this.stopAutoPlay();\n        this.startAutoPlay();\n      },\n      clickNext() {\n        this.disableTransition = true;\n        this.nextImage();\n        this.stopAutoPlay();\n        this.startAutoPlay();\n      },\n      handlePauseClick() {\n        // Toggle pause/resume state\n        this.isPaused = !this.isPaused;\n\n        if (this.isPaused) {\n          this.stopAutoPlay(); // Stop autoplay when paused\n        } else {\n          this.startAutoPlay(); // Resume autoplay when unpaused\n        }\n      },\n      prevImage() {\n        this.disableTransition = true;\n        if (this.currentIndex > 0) {\n          this.currentIndex--;\n        } else {\n          this.currentIndex = this.imagePaths.length-1;\n        }\n        this.resetTransition();\n      },\n      nextImage() {\n        if (this.currentIndex < this.imagePaths.length - 1) {\n          this.currentIndex++;\n        } else {\n          this.currentIndex = 0;\n        }\n        this.resetTransition();\n      },\n\n      startAutoPlay() {\n        // Automatically switch images at set intervals\n        if (!this.isPaused) {\n          this.autoPlayTimer = setInterval(() => {\n            this.nextImage();\n          }, this.autoPlayInterval);\n        }\n      },\n      stopAutoPlay() {\n        // Clear the autoplay timer\n        if (this.autoPlayTimer) {\n          clearInterval(this.autoPlayTimer);\n          this.autoPlayTimer = null;\n        }\n      },\n      resetTransition() {\n      // Re-enable the fade transition after a delay\n        setTimeout(() => {\n          this.disableTransition = false;\n        }, 100); // Small delay to ensure the image has changed before re-enabling fade\n      }\n    },\n    watch: {\n      // Watch for changes to the autoPlay prop and update autoplay behavior\n      autoPlay(newValue) {\n        if (newValue) {\n          this.startAutoPlay();\n        } else {\n          this.stopAutoPlay();\n        }\n      }\n    }\n  };\n  </script>\n  \n  <style lang=\"scss\">\n  .slideshow {\n    text-align: center;\n  }\n  \n  .image-container {\n    width: 100%;\n    //max-width: 600px;\n    margin: 0 auto;\n  }\n  .fade-enter-active, .fade-leave-active {\n    transition: opacity 1s ease;\n  }\n  .fade-enter, .fade-leave-to /* .fade-leave-active in versions <2.1.8 */ {\n    opacity: 0;\n  }\n  \n  .slideshow-image {\n    width: 100%;\n    height: auto;\n  }\n  \n  .controls {\n  display: flex;\n  justify-content: center;\n  gap: 10px;\n  margin-top: 10px;\n}\n  \n  button {\n    margin: 0 5px;\n  }\n  </style>\n  ","import { render } from \"./slideshow.vue?vue&type=template&id=749d03df\"\nimport script from \"./slideshow.vue?vue&type=script&lang=js\"\nexport * from \"./slideshow.vue?vue&type=script&lang=js\"\n\nimport \"./slideshow.vue?vue&type=style&index=0&id=749d03df&lang=scss\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./projectTightRope.vue?vue&type=template&id=dedc50b8\"\nimport script from \"./projectTightRope.vue?vue&type=script&lang=js\"\nexport * from \"./projectTightRope.vue?vue&type=script&lang=js\"\n\nimport \"./projectTightRope.vue?vue&type=style&index=0&id=dedc50b8&lang=scss\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["class","id","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_createVNode","_component_slideshow","imageUrls","$data","main_images","numberOfImages","autoPlay","_createStaticVNode","_imports_0","_imports_1","_imports_2","_imports_3","_imports_4","_imports_5","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","innerHTML","woz_text_1","_hoisted_7","src","_imports_6","_hoisted_8","_hoisted_9","_imports_7","_hoisted_10","woz_text_2","_hoisted_11","_hoisted_12","_hoisted_13","_hoisted_14","woz_text_3","_hoisted_15","_imports_8","_hoisted_16","_hoisted_17","_hoisted_18","_hoisted_19","style","wing_images","textUrls","wing_text","_hoisted_20","rod_images","rod_text","_imports_9","_imports_10","title","frameborder","allow","referrerpolicy","allowfullscreen","_imports_11","_imports_12","_imports_13","key","imagePaths","length","_Transition","name","$options","transitionName","mode","default","_withCtx","currentIndex","alt","$props","textContent","_toDisplayString","_createCommentVNode","_","showControls","onClick","_cache","args","clickPrev","handlePauseClick","isPaused","clickNext","props","type","Array","required","Boolean","autoPlayInterval","Number","data","disableTransition","autoPlayTimer","mounted","this","map","image","startAutoPlay","computed","images","slice","console","log","methods","prevImage","stopAutoPlay","nextImage","resetTransition","setInterval","clearInterval","setTimeout","watch","newValue","__exports__","components","slideshow","width_val","window","innerWidth","height_val","innerHeight","woz1Code","render"],"sourceRoot":""}