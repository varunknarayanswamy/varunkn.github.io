"use strict";(self["webpackChunkvarun_website_updated"]=self["webpackChunkvarun_website_updated"]||[]).push([[529],{5965:function(e,t,a){a.r(t),a.d(t,{default:function(){return pa}});var i=a(6768),n=a.p+"img/tim-gouw-stressed_student.fa163a62.jpg",r=a.p+"img/old_graph_1.e4fb3601.png",o=a.p+"img/old_graph_2.2c7b3b0b.png",l=a.p+"img/old_graph_3.39cfab6e.png",s=a.p+"img/old_graph_4.1f7b6f8c.png",d=a.p+"img/old_graph_5.547e6a3f.png",u=a.p+"img/old_graph_6.7819cb7e.png",c=a.p+"img/initial_correlation.6516878e.png";const p={class:"container"},f={class:"graph_content"},v={class:"observable_content"},h={ref:"viewofYear_range"},m={ref:"viewofEmotion_score"},b={class:"graph_container"},g={style:{"min-width":"400px"},id:"first",ref:"first_plot"},_={class:"graph_content"},w={class:"observable_content"},k={class:"graph_object"},y={ref:"viewofYear_steps"},L={ref:"viewofParticipant_dropdown"},A={id:"third",ref:"final_chart"},x={class:"graph_content"},S={class:"observable_content"},P={ref:"viewofStep_breakdown"},E={ref:"steps_time_breakdown"};function q(e,t,a,q,I,M){const N=(0,i.g2)("sectionContainer"),T=(0,i.g2)("overLappingButton");return(0,i.uX)(),(0,i.CE)("div",p,[t[13]||(t[13]=(0,i.Lk)("b",{style:{color:"white"}},"*This project is best viewed on desktop views",-1)),(0,i.bF)(N,{class:"light"},{default:(0,i.k6)((()=>t[0]||(t[0]=[(0,i.Lk)("h1",null,"Analysing Longitudinal Human Behavior",-1),(0,i.Lk)("div",{style:{"text-align":"center","margin-bottom":"20px"}},[(0,i.Lk)("p",{style:{"margin-bottom":"5px"}},"Visualizing Wellness: Understanding student mental health through Longitudinal data analysis")],-1),(0,i.Lk)("div",{class:"main_img"},null,-1),(0,i.Lk)("h2",null," Team",-1),(0,i.Lk)("p",null,[(0,i.eW)("Mars Gao, Soham Gadgil, "),(0,i.Lk)("b",null,"Varun Narayanswamy")],-1),(0,i.Lk)("h2",null,"Timeline",-1),(0,i.Lk)("p",null,"March 2024 - June 2024",-1)]))),_:1}),(0,i.bF)(N,{class:"dark situation"},{default:(0,i.k6)((()=>t[1]||(t[1]=[(0,i.Lk)("h1",null,"The Situation",-1),(0,i.Lk)("p",null," In today's world where college students have to juggle multiple responsibilities, mental health and wellness is something that is often overlooked.",-1),(0,i.Lk)("h2",null,"Our Goal",-1),(0,i.Lk)("p",null,[(0,i.eW)("Our goal was to create a portal to help "),(0,i.Lk)("b",null,"researchers, educators, and policymakers"),(0,i.eW)(" explore links between college student "),(0,i.Lk)("b",null,"behavior and mental health"),(0,i.eW)(", to improve the system for a more "),(0,i.Lk)("b",null,"mindful environment.")],-1),(0,i.Lk)("div",{class:"grid"},[(0,i.Lk)("div",{id:"content"},[(0,i.Lk)("h2",null,"The GLOBEM Dataset"),(0,i.Lk)("p",null,[(0,i.eW)(" For this project, we have used the "),(0,i.Lk)("a",{href:"https://physionet.org/content/globem/1.1/INS-W_1/#files-panel"},"GLOBEM dataset"),(0,i.eW)(". The GLOBEM dataset is a mult-year dataset for logitudinal human behavior, collected from the daily activities of around 705 diverse UW students.")]),(0,i.Lk)("ul",null,[(0,i.Lk)("li",null,[(0,i.Lk)("p",null,"The data collection spans three years (~14 weeks each year, March to June, from 2019 to 2021)")]),(0,i.Lk)("li",null,[(0,i.Lk)("p",null,"It contains a variety of different sensor, phone usage, and sleep data for analysing student behavior. ")]),(0,i.Lk)("li",null,[(0,i.Lk)("p",null,"Each of the attributes are collected during different phases of the day: morning, afternoon, evening, and night.")])]),(0,i.Lk)("h3",null,"Mental Health Data"),(0,i.Lk)("p",null,"The GLOBEM dataset provides an insight into the mental health of the students through quantitative depression and anxiety scores. This data is collected from students using weekly short surveys they take, and use a number of different parameters."),(0,i.Lk)("p",null,"To measure mental health, we use two different metrics:"),(0,i.Lk)("ul",null,[(0,i.Lk)("li",null,[(0,i.Lk)("p",null,"PHQ-4 (Patient Health Questionnaire 4)")]),(0,i.Lk)("li",null,[(0,i.Lk)("p",null,"PANAS (Positive and Negative Affect Schedule)")])])]),(0,i.Lk)("img",{src:n})],-1)]))),_:1}),(0,i.bF)(N,{class:"light"},{default:(0,i.k6)((()=>t[2]||(t[2]=[(0,i.Lk)("h1",null,"Our Process",-1),(0,i.Lk)("p",null,"After gaining access to the dataset the team began analysis. We quickly realized that we had a number of issues to deal with. ",-1),(0,i.Lk)("div",{class:"issue_1"},[(0,i.Lk)("h3",null,"Messy Data"),(0,i.Lk)("p",null,"We struggled with data metrics that made no sense, potentially collected incorrectly with poor device collection or more"),(0,i.Lk)("h3",null,"Missing Data"),(0,i.Lk)("p",null,"Many of the student data entries were empty, with students missing entries of devices failing to collect. Due to this, we were forced to look at data trends, and when possible fill in the empty data based on existing trends"),(0,i.Lk)("h3",null,"Students Variation"),(0,i.Lk)("p",null,"Even with more data, each and every student is highly different. Looking at averages, and approaches was many times unhelpful, forcing us to consider the individuals.")],-1),(0,i.Lk)("p",null,"Our approach to identifying these issues and evaluating our solutions was to create many visualizations and continually assess them.",-1),(0,i.Lk)("div",{class:"small_image_set"},[(0,i.Lk)("img",{src:r}),(0,i.Lk)("img",{src:o}),(0,i.Lk)("img",{src:l}),(0,i.Lk)("img",{src:s}),(0,i.Lk)("img",{src:d}),(0,i.Lk)("img",{src:u})],-1),(0,i.Lk)("br",null,null,-1),(0,i.Lk)("p",null,[(0,i.eW)("Below are the "),(0,i.Lk)("b",null,"finalized visualizations"),(0,i.eW)(" we chose to showcase. ")],-1)]))),_:1}),(0,i.bF)(N,{class:"dark",style:{"padding-left":"5%","padding-right":"5%"}},{default:(0,i.k6)((()=>[t[4]||(t[4]=(0,i.Lk)("h1",null,"Changes in mental health over weeks",-1)),t[5]||(t[5]=(0,i.Lk)("p",null," We first examine weekly changes in student mental health. Hovering over a line shows trends for each student by year and metric. Patterns reveal varied trajectories, with some students' mental health declining, potentially from increased workload, while others improve.",-1)),(0,i.Lk)("div",f,[(0,i.bF)(T,null,{"extra-section":(0,i.k6)((()=>t[3]||(t[3]=[(0,i.Lk)("div",{class:"graph_explanation"},[(0,i.Lk)("h2",null,"Fields"),(0,i.Lk)("h3",null,[(0,i.Lk)("a",{href:"https://www.oregonpainguidance.org/app/content/uploads/2016/05/PHQ-4.pdf"},"PHQ-4")]),(0,i.Lk)("li",null,[(0,i.eW)('Based on 4 "how often" questions (0-3). Two form an '),(0,i.Lk)("b",null,"Anxiety Score"),(0,i.eW)(", and the other two a "),(0,i.Lk)("b",null,"Depression Score"),(0,i.eW)(".")]),(0,i.Lk)("li",null,"Higher scores indicate a greater likelihood of anxiety or depression."),(0,i.Lk)("h3",null,[(0,i.Lk)("a",{href:"https://positivepsychology.com/positive-and-negative-affect-schedule-panas/"},"PANAS")]),(0,i.Lk)("li",null,"A 10-item scale measuring positive and negative emotions. Scores range from 0 to 20, with higher values indicating greater intensity."),(0,i.Lk)("h3",null,"Week"),(0,i.Lk)("li",null,"Students completed weekly surveys, allowing us to track changes in their PANAS and PHQ-4 scores over the quarter."),(0,i.Lk)("h3",null,"How to use this graph"),(0,i.Lk)("ul",null,[(0,i.Lk)("li",null,"Select a year and the mental health score to view."),(0,i.Lk)("li",null,"Hover over the graph—each line shows a student's mental health journey throughout the quarter."),(0,i.Lk)("li",null,"Unique student identifiers ensure anonymity. View identifiers on the left as you hover."),(0,i.Lk)("li",null,"Observe how scores change and align over time.")])],-1)]))),_:1}),(0,i.Lk)("div",v,[(0,i.Lk)("div",h,null,512),(0,i.Lk)("div",m,null,512),(0,i.Lk)("div",b,[(0,i.Lk)("div",g,null,512)])])])])),_:1}),(0,i.bF)(N,{class:"light"},{default:(0,i.k6)((()=>t[6]||(t[6]=[(0,i.Lk)("h3",null,"Analysing global trends",-1),(0,i.Lk)("p",null,[(0,i.eW)('We aggregate yearly data to analyze global patterns, creating a heatmap to show correlations between attributes. Each attribute is subdivided by time of day using the format {attribute_name}.{time_of_day}: "Sleep" denotes total minutes slept, '),(0,i.Lk)("b",null,'"Screen"'),(0,i.eW)(" the phone screen time, "),(0,i.Lk)("b",null,'"Episodes"'),(0,i.eW)(" the number of unlocks, "),(0,i.Lk)("b",null,'"Steps"'),(0,i.eW)(" the step count, and "),(0,i.Lk)("b",null,'"Loc"'),(0,i.eW)(" the distance covered in meters. "),(0,i.Lk)("br"),(0,i.Lk)("br")],-1),(0,i.Lk)("img",{src:c,style:{width:"100%",margin:"auto",height:"auto"}},null,-1)]))),_:1}),(0,i.bF)(N,{class:"dark"},{default:(0,i.k6)((()=>[t[8]||(t[8]=(0,i.Lk)("h3",null,"Diving deeper into individual student behavior",-1)),t[9]||(t[9]=(0,i.Lk)("p",null,'Analyzing global trends suggests a possible correlation between the PANAS positive score and step count. The visualization below explores this per student, showing weekly changes in average steps and their relation to PANAS positive scores. Selecting weeks or "All" highlights trends across students, with a linear trendline for clarity. The tooltip enables selecting specific students to observe their weekly patterns.',-1)),(0,i.Lk)("div",_,[(0,i.bF)(T,null,{"extra-section":(0,i.k6)((()=>t[7]||(t[7]=[(0,i.Lk)("div",{class:"graph_explanation"},[(0,i.Lk)("h2",null,"How This Graph Works"),(0,i.Lk)("h3",null,[(0,i.Lk)("a",{href:"https://positivepsychology.com/positive-and-negative-affect-schedule-panas/"},"PANAS")]),(0,i.Lk)("li",null,"PANAS is a 10-item scale measuring positive and negative emotions a person feels separately."),(0,i.Lk)("li",null,"A higher values indicate greater intensity. PANAS scores range from 0 to 20."),(0,i.Lk)("li",null,"Each student filled out a survey weekly informing, so we can therefore understand how their PANAS and PHQ-4 scores changes over the quarter."),(0,i.Lk)("h3",null,"Steps"),(0,i.Lk)("li",null,"Each students steps are recorded thanks to a wearable device they are wearing. Each weeks steps are averaged after this."),(0,i.Lk)("h3",null,"How to use this graph"),(0,i.Lk)("ul",null,[(0,i.Lk)("li",null,"Select a year and chose a student"),(0,i.Lk)("li",null,"Use the top graph to understand their inspect their change in weekly steps and select a week to investigate"),(0,i.Lk)("li",null,"Use the bottom graph to understand how their steps correlate with their PANAS Positive Score (how positive they are feeling) and how they compare to their peers. The selected student is highlighted in red")])],-1)]))),_:1}),(0,i.Lk)("div",w,[(0,i.Lk)("div",k,[(0,i.Lk)("div",y,null,512),(0,i.Lk)("div",L,null,512),(0,i.Lk)("div",A,null,512)])])])])),_:1}),(0,i.bF)(N,{class:"light"},{default:(0,i.k6)((()=>[t[11]||(t[11]=(0,i.Lk)("h2",null,"Expanding Selections",-1)),t[12]||(t[12]=(0,i.Lk)("p",null,' The visualization below enables combining multiple weeks and students. By selecting a subset of students and time periods in the dot plot, step counts are divided by times of day, showing their relationship to PANAS positive scores. Both x and y values are averaged over the selected period, allowing insights like, "For students who walk a lot, how does their step count at different times of day relate to their PANAS positive score over time?"',-1)),(0,i.Lk)("div",x,[(0,i.bF)(T,null,{"extra-section":(0,i.k6)((()=>t[10]||(t[10]=[(0,i.Lk)("div",{class:"graph_explanation"},[(0,i.Lk)("h2",null,"How to Read This Graph"),(0,i.Lk)("h3",null,"Week Period"),(0,i.Lk)("li",null,"The Week Periods represent sets of days for each week"),(0,i.Lk)("h3",null,"Time Periods"),(0,i.Lk)("p",null,"Each day is split into 4 time Periods"),(0,i.Lk)("ul",null,[(0,i.Lk)("li",null,[(0,i.Lk)("b",null,"Night: "),(0,i.eW)("12:00 AM From midnight to 6:00 AM")]),(0,i.Lk)("li",null,[(0,i.Lk)("b",null,"Morning: "),(0,i.eW)("6:00 AM From midnight to 12:00 PM")]),(0,i.Lk)("li",null,[(0,i.Lk)("b",null,"Afternoon: "),(0,i.eW)("12:00 PM From midnight to 6:00 PM")]),(0,i.Lk)("li",null,[(0,i.Lk)("b",null,"Evening: "),(0,i.eW)("6:00 AM From midnight to 12:00 AM")])]),(0,i.Lk)("h3",null,"Steps"),(0,i.Lk)("p",null,"Each students steps is averaged over different time periods and displayed as a dot"),(0,i.Lk)("h3",null,"PANAS Positive Score"),(0,i.Lk)("p",null,[(0,i.eW)("An average is taken of each students PANAS Score throughout the year and displayed. "),(0,i.Lk)("b",null,"(This is not averaged over time periods, as students take the survey at the end of each week)")]),(0,i.Lk)("h2",null,"How to Use This Graph"),(0,i.Lk)("ul",null,[(0,i.Lk)("li",null,"Select a Year"),(0,i.Lk)("li",null,[(0,i.Lk)("b",null,"Drag over"),(0,i.eW)(" the top graph to select a subset of the students based on time period, number of steps or both")]),(0,i.Lk)("li",null,"The bottom graphs based around daily quadrants will filter to only include their data"),(0,i.Lk)("li",null,"How does the trend line differ during different years? Different weeks? Different amount of step counts?")])],-1)]))),_:1}),(0,i.Lk)("div",S,[(0,i.Lk)("div",P,null,512),(0,i.Lk)("div",E,null,512)])])])),_:1})])}var I=a(144),M=a(5433),N=a(1253),T=a(5130);const Q={class:"parent"},R={class:"button_t_b"},V={class:"text_container"},W={key:0,class:"text_visibility_container"},D={class:"content"},z={key:0,class:"extra_section"};function C(e,t,a,n,r,o){return(0,i.uX)(),(0,i.CE)("div",Q,[(0,i.Lk)("div",R,[(0,i.Lk)("div",V,[(0,i.bF)(T.eB,{name:"fade"},{default:(0,i.k6)((()=>[r.textVisible?((0,i.uX)(),(0,i.CE)("div",W,[(0,i.RG)(e.$slots,"button-text",{},(()=>[t[1]||(t[1]=(0,i.Lk)("em",null,[(0,i.Lk)("b",null,"See for more information")],-1))]),!0)])):(0,i.Q3)("",!0)])),_:3})]),(0,i.Lk)("button",{class:"overlap-button",onClick:t[0]||(t[0]=e=>o.toggleSection())},[(0,i.RG)(e.$slots,"button-content",{},(()=>[t[2]||(t[2]=(0,i.eW)("ℹ️"))]),!0)])]),(0,i.Lk)("div",D,[(0,i.RG)(e.$slots,"custom-content",{},void 0,!0)]),r.isSectionVisible?((0,i.uX)(),(0,i.CE)("div",z,[(0,i.RG)(e.$slots,"extra-section",{class:"extra_section_obj"},(()=>[t[3]||(t[3]=(0,i.eW)("This is the extra section content!"))]),!0)])):(0,i.Q3)("",!0)])}var F={name:"OverlappingButton",data(){return{isSectionVisible:!1,textVisible:!0}},mounted(){this.interval=setInterval((()=>{this.textVisible=!this.textVisible}),2e3)},beforeUnmount(){clearInterval(this.interval)},methods:{toggleSection(){this.isSectionVisible=!this.isSectionVisible}}},B=a(1241);const H=(0,B.A)(F,[["render",C],["__scopeId","data-v-7f02792a"]]);var G=H;a(7642),a(8004),a(3853),a(5876),a(2475),a(5024),a(1698),a(4603),a(7566),a(8721);function Y(e){return e`# Introduction to inputs

These lightweight interface components — buttons, sliders, dropdowns, tables, and the like — help you explore data and build interactive displays. For a walkthrough of how you might use these to support data analysis, see [Hello, Inputs!](/@observablehq/hello-inputs)`}function j(e){return e`---
## Usage

Declare your inputs with [viewof](/@observablehq/introduction-to-views), like so:`}function O(e){return e.range([0,11],{value:5,step:.1,label:"Gain"})}function U(e){return e`Now you can reference the input’s value (here *gain*) in any cell, and the cell will run whenever the input changes. No event listeners required!`}function $(e){return e}function K(e,t){return t`The current gain is ${e.toFixed(1)}!`}function J(e){return e`Observable Inputs are released under the [ISC license](https://github.com/observablehq/inputs/blob/main/LICENSE) and depend only on [Hypertext Literal](/@observablehq/htl), our tagged template literal for safely generating dynamic HTML. If you are interested in contributing or wish to report an issue, please see [our repository](https://github.com/observablehq/inputs). For recent changes, please see [our release notes](https://github.com/observablehq/inputs/releases).`}function X(e){return e`---

## Basics

These basic inputs will get you started.

* [Button](/@observablehq/input-button) - do something when a button is clicked
* [Toggle](/@observablehq/input-toggle) - toggle between two values (on or off)
* [Checkbox](/@observablehq/input-checkbox) - choose any from a set
* [Radio](/@observablehq/input-radio) - choose one from a set
* [Range](/@observablehq/input-range) or [Number](/@observablehq/input-range) - choose a number in a range (slider)
* [Select](/@observablehq/input-select) - choose one or any from a set (drop-down menu)
* [Text](/@observablehq/input-text) - enter freeform single-line text
* [Textarea](/@observablehq/input-textarea) - enter freeform multi-line text
* [Date](/@observablehq/input-date) or [Datetime](/@observablehq/input-date) - choose a date
* [Color](/@observablehq/input-color) - choose a color
* [File](/@observablehq/input-file) - choose a local file`}function Z(e){return e`---

### [Button](/@observablehq/input-button) 

Do something when a button is clicked. [Examples ›](/@observablehq/input-button) [API Reference ›](https://github.com/observablehq/inputs/blob/main/README.md#button)`}function ee(e){return e.button("Click me")}function te(e){return e}function ae(e){return e`---

### [Toggle](/@observablehq/input-toggle) 

Toggle between two values (on or off). [Examples ›](/@observablehq/input-toggle) [API Reference ›](https://github.com/observablehq/inputs/blob/main/README.md#toggle)`}function ie(e){return e.toggle({label:"Mute"})}function ne(e){return e}function re(e){return e`---

### [Checkbox](/@observablehq/input-checkbox) 

Choose any from a set. [Examples ›](/@observablehq/input-checkbox) [API Reference ›](https://github.com/observablehq/inputs/blob/main/README.md#checkbox)`}function oe(e){return e.checkbox(["salty","sweet","bitter","sour","umami"],{label:"Flavors"})}function le(e){return e}function se(e){return e`---

### [Radio](/@observablehq/input-radio)

Choose one from a set. [Examples ›](/@observablehq/input-radio) [API Reference ›](https://github.com/observablehq/inputs/blob/main/README.md#radio)`}function de(e){return e.radio(["salty","sweet","bitter","sour","umami"],{label:"Flavor"})}function ue(e){return e}function ce(e){return e`---

### [Range](/@observablehq/input-range)

Pick a number. [Examples ›](/@observablehq/input-range) [API Reference ›](https://github.com/observablehq/inputs/blob/main/README.md#range)`}function pe(e){return e.range([0,255],{step:1,label:"Favorite number"})}function fe(e){return e}function ve(e){return e`---

### [Select](/@observablehq/input-select)

Choose one, or any, from a menu. [Examples ›](/@observablehq/input-select) [API Reference ›](https://github.com/observablehq/inputs/blob/main/README.md#select)`}function he(e,t){return e.select([null].concat(t),{label:"Home state"})}function me(e){return e}function be(e,t){return e.select(t,{label:"Visited states",multiple:!0})}function ge(e){return e}function _e(e){return e`---

### [Text](/@observablehq/input-text)

Enter freeform single-line text. [Examples ›](/@observablehq/input-text) [API Reference ›](https://github.com/observablehq/inputs/blob/main/README.md#text)`}function we(e){return e.text({label:"Name",placeholder:"What’s your name?"})}function ke(e){return e}function ye(e){return e`---

### [Textarea](/@observablehq/input-textarea)

Enter freeform multi-line text. [Examples ›](/@observablehq/input-textarea) [API Reference ›](https://github.com/observablehq/inputs/blob/main/README.md#textarea)`}function Le(e){return e.textarea({label:"Biography",placeholder:"What’s your story?"})}function Ae(e){return e}function xe(e){return e`---

### [Date](/@observablehq/input-date)

Choose a date, or a date and time. [Examples ›](/@observablehq/input-date) [API Reference ›](https://github.com/observablehq/inputs/blob/main/README.md#date)`}function Se(e){return e.date({label:"Birthday"})}function Pe(e){return e}function Ee(e){return e`---

### [Color](/@observablehq/input-color)

Choose a color. [Examples ›](/@observablehq/input-color) [API Reference ›](https://github.com/observablehq/inputs/blob/main/README.md#color)`}function qe(e){return e.color({label:"Favorite color",value:"#4682b4"})}function Ie(e){return e}function Me(e){return e`---

### [File](/@observablehq/input-file)

Choose a local file. [Examples ›](/@observablehq/input-file) [API Reference ›](https://github.com/observablehq/inputs/blob/main/README.md#file)`}function Ne(e){return e.file({label:"CSV file",accept:".csv",required:!0})}function Te(e){return e.csv({typed:!0})}function Qe(e){return e`---

## Tabular data

These fancy inputs are designed to work with tabular data such as CSV or TSV [file attachments](/@observablehq/file-attachments) and [database clients](/@observablehq/databases).

* [Search](/@observablehq/input-search) - query a tabular dataset
* [Table](/@observablehq/input-table) - browse a tabular dataset`}function Re(e){return e`---

### [Search](/@observablehq/input-search)

Query a tabular dataset. [Examples ›](/@observablehq/input-search) [API Reference ›](https://github.com/observablehq/inputs/blob/main/README.md#search)`}function Ve(e,t){return e.search(t,{placeholder:"Search U.S. capitals"})}function We(e){return e}function De(e){return e`---

### [Table](/@observablehq/input-table)

Browse a tabular dataset. [Examples ›](/@observablehq/input-table) [API Reference ›](https://github.com/observablehq/inputs/blob/main/README.md#table)`}function ze(e,t){return e.table(t)}function Ce(e){return e}function Fe(e){return e`---

## And more!

Got the basics? Here are a few more advanced techniques:

* [Form](https://observablehq.com/@observablehq/input-form?collection=@observablehq/inputs) - combine multiple inputs for a compact display
* [Synchronized inputs](https://observablehq.com/@observablehq/synchronized-inputs?collection=@observablehq/inputs) - bind two or more inputs
* [Introduction to Views](/@observablehq/introduction-to-views) - more on Observable’s viewof`}function Be(e){return e`We are grateful to Jeremy Ashkenas for blazing the trail with [“The Grand Native Inputs Bazaar”](/@jashkenas/inputs). To migrate from Jeremy’s inputs to our new official inputs, consider our [legacy inputs](/@observablehq/legacy-inputs).`}function He(e){return e`For even more, consider these “friends & family” inputs and techniques shared by the Observable community:`}function Ge(e,t){return e.table([[["2D Slider","/d/98bbb19bf9e859ee"],"Fabian Iwand","a two-dimensional range"],[["Binary Input","/@rreusser/binary-input"],"Ricky Reusser","bitwise IEEE floating point"],[["DIY inputs","/@bartok32/diy-inputs"],"Bartosz Prusinowski","inputs with fun, custom styles"],[["FineRange","/@rreusser/fine-range"],"Ricky Reusser","high-precision numeric control"],[["Form Input","/@mbostock/form-input"],"Mike Bostock","multiple inputs in single cell"],[["Inputs","/@jashkenas/inputs"],"Jeremy Ashkenas","the original"],[["Player","/@oscar6echo/player"],"oscar6echo","detailed timing control for animation"],[["Scrubber","/@mbostock/scrubber"],"Mike Bostock","play/pause/scrub control for animation"],[["Range Slider","/@mootari/range-slider"],"Fabian Iwand","a two-ended range"],[["Ternary Slider","/@yurivish/ternary-slider"],"Yuri Vishnevsky","a proportion of three values"],[["Data driven range sliders","/@bumbeishvili/data-driven-range-sliders"],"David B.","a range input with a histogram"],[["Snapping Histogram Slider","/@trebor/snapping-histogram-slider"],"Robert Harris","a range input with a histogram"],[["Inputs in grid","/@bumbeishvili/input-groups"],"David B.","combine multiple inputs into a compact grid"],[["List Input","/@harrislapiroff/list-input"],"Harris L.","enter more than one of something"],[["Copier","/@mbostock/copier"],"Mike Bostock","a button to copy to the clipboard"],[["Tangle","/@mbostock/tangle"],"Mike Bostock","Bret Victor-inspired inline scrubbable numbers"],[["Editor","/@cmudig/editor"],"CMU Data Interaction Group","code editor with syntax highlighting"],[["Color Scheme Picker","/@zechasault/color-schemes-and-interpolators-picker"],"Zack Ciminera","pick a D3 color scheme"],[["Easing Curve Editor","/@nhogs/easing-graphs-editor"],"Nhogs","create a custom easing curve"]].map((([e,t,a])=>({Name:e,Author:t,Description:a}))),{sort:"Name",rows:1/0,layout:"auto",width:{Description:"60%"},format:{Name:([e,a])=>t`<a href=${a} target=_blank>${e}`}})}function Ye(e){return e`To share your reusable input or technique, please leave a comment.`}function je(e){return e`---

## Appendix`}function Oe(e){return e("us-state-capitals.tsv").tsv({typed:!0})}function Ue(e){return e.map((e=>e.State))}function $e(e){return e`The cells below provide deprecated aliases for older versions of Inputs. Please use Inputs.button *etc.* instead of importing from this notebook.`}function Ke(e){return e.button}function Je(e){return e.toggle}function Xe(e){return e.radio}function Ze(e){return e.checkbox}function et(e){return e.range}function tt(e){return e.select}function at(e){return e.text}function it(e){return e.textarea}function nt(e){return e.search}function rt(e){return e.table}function ot(e){return e.input}function lt(e){return e.bind}function st(e){return e.disposal}function dt(e){return e.svg}function ut(e){return e.html}function ct(e,t){const i=e.module();function n(){return this.url}const r=new Map([["us-state-capitals.tsv",{url:new URL(a(4018),a.b),mimeType:"text/tab-separated-values",toString:n}]]);return i.builtin("FileAttachment",e.fileAttachments((e=>r.get(e)))),i.variable(t()).define(["md"],Y),i.variable(t("usage")).define("usage",["md"],j),i.variable(t("viewof gain")).define("viewof gain",["Inputs"],O),i.variable(t("gain")).define("gain",["Generators","viewof gain"],((e,t)=>e.input(t))),i.variable(t("now")).define("now",["md"],U),i.variable(t("gain2")).define("gain2",["gain"],$),i.variable(t("currentgain")).define("currentgain",["gain","md"],K),i.variable(t()).define(["md"],J),i.variable(t("basics")).define("basics",["md"],X),i.variable(t("button")).define("button",["md"],Z),i.variable(t("viewof clicks")).define("viewof clicks",["Inputs"],ee),i.variable(t("clicks")).define("clicks",["Generators","viewof clicks"],((e,t)=>e.input(t))),i.variable(t()).define(["clicks"],te),i.variable(t("toggle")).define("toggle",["md"],ae),i.variable(t("viewof mute")).define("viewof mute",["Inputs"],ie),i.variable(t("mute")).define("mute",["Generators","viewof mute"],((e,t)=>e.input(t))),i.variable(t()).define(["mute"],ne),i.variable(t("checkbox")).define("checkbox",["md"],re),i.variable(t("viewof flavors")).define("viewof flavors",["Inputs"],oe),i.variable(t("flavors")).define("flavors",["Generators","viewof flavors"],((e,t)=>e.input(t))),i.variable(t()).define(["flavors"],le),i.variable(t("radio")).define("radio",["md"],se),i.variable(t("viewof flavor")).define("viewof flavor",["Inputs"],de),i.variable(t("flavor")).define("flavor",["Generators","viewof flavor"],((e,t)=>e.input(t))),i.variable(t()).define(["flavor"],ue),i.variable(t("range")).define("range",["md"],ce),i.variable(t("viewof n")).define("viewof n",["Inputs"],pe),i.variable(t("n")).define("n",["Generators","viewof n"],((e,t)=>e.input(t))),i.variable(t()).define(["n"],fe),i.variable(t("select")).define("select",["md"],ve),i.variable(t("viewof homeState")).define("viewof homeState",["Inputs","stateNames"],he),i.variable(t("homeState")).define("homeState",["Generators","viewof homeState"],((e,t)=>e.input(t))),i.variable(t()).define(["homeState"],me),i.variable(t("viewof visitedStates")).define("viewof visitedStates",["Inputs","stateNames"],be),i.variable(t("visitedStates")).define("visitedStates",["Generators","viewof visitedStates"],((e,t)=>e.input(t))),i.variable(t()).define(["visitedStates"],ge),i.variable(t()).define(["md"],_e),i.variable(t("viewof name")).define("viewof name",["Inputs"],we),i.variable(t("name")).define("name",["Generators","viewof name"],((e,t)=>e.input(t))),i.variable(t()).define(["name"],ke),i.variable(t()).define(["md"],ye),i.variable(t("viewof bio")).define("viewof bio",["Inputs"],Le),i.variable(t("bio")).define("bio",["Generators","viewof bio"],((e,t)=>e.input(t))),i.variable(t()).define(["bio"],Ae),i.variable(t()).define(["md"],xe),i.variable(t("viewof birthday")).define("viewof birthday",["Inputs"],Se),i.variable(t("birthday")).define("birthday",["Generators","viewof birthday"],((e,t)=>e.input(t))),i.variable(t()).define(["birthday"],Pe),i.variable(t()).define(["md"],Ee),i.variable(t("viewof color")).define("viewof color",["Inputs"],qe),i.variable(t("color")).define("color",["Generators","viewof color"],((e,t)=>e.input(t))),i.variable(t()).define(["color"],Ie),i.variable(t()).define(["md"],Me),i.variable(t("viewof file")).define("viewof file",["Inputs"],Ne),i.variable(t("file")).define("file",["Generators","viewof file"],((e,t)=>e.input(t))),i.variable(t("data")).define("data",["file"],Te),i.variable(t("tables")).define("tables",["md"],Qe),i.variable(t()).define(["md"],Re),i.variable(t("viewof search")).define("viewof search",["Inputs","capitals"],Ve),i.variable(t("search")).define("search",["Generators","viewof search"],((e,t)=>e.input(t))),i.variable(t()).define(["search"],We),i.variable(t()).define(["md"],De),i.variable(t("viewof rows")).define("viewof rows",["Inputs","search"],ze),i.variable(t("rows")).define("rows",["Generators","viewof rows"],((e,t)=>e.input(t))),i.variable(t()).define(["rows"],Ce),i.variable(t("techniques")).define("techniques",["md"],Fe),i.variable(t()).define(["md"],Be),i.variable(t()).define(["md"],He),i.variable(t()).define(["Inputs","html"],Ge),i.variable(t()).define(["md"],Ye),i.variable(t()).define(["md"],je),i.variable(t("capitals")).define("capitals",["FileAttachment"],Oe),i.variable(t("stateNames")).define("stateNames",["capitals"],Ue),i.variable(t()).define(["md"],$e),i.variable(t("Button")).define("Button",["Inputs"],Ke),i.variable(t("Toggle")).define("Toggle",["Inputs"],Je),i.variable(t("Radio")).define("Radio",["Inputs"],Xe),i.variable(t("Checkbox")).define("Checkbox",["Inputs"],Ze),i.variable(t("Range")).define("Range",["Inputs"],et),i.variable(t("Select")).define("Select",["Inputs"],tt),i.variable(t("Text")).define("Text",["Inputs"],at),i.variable(t("Textarea")).define("Textarea",["Inputs"],it),i.variable(t("Search")).define("Search",["Inputs"],nt),i.variable(t("Table")).define("Table",["Inputs"],rt),i.variable(t("Input")).define("Input",["Inputs"],ot),i.variable(t("bind")).define("bind",["Inputs"],lt),i.variable(t("disposal")).define("disposal",["Inputs"],st),i.variable(t("svg")).define("svg",["htl"],dt),i.variable(t("html")).define("html",["htl"],ut),i}function pt(e){return e`# Vega-Lite API v5`}function ft(e){return e`The [Vega-Lite JavaScript API](https://github.com/vega/vega-lite-api/) provides a convenient way to write [Vega-Lite](https://vega.github.io/vega-lite) specifications in a programmatic fashion. Scroll down for some usage examples, or browse the [Vega-Lite API example collection](https://observablehq.com/collection/@vega/vega-lite-api)! 

_This notebook uses **version 5** of Vega-Lite and the corresponding Vega-Lite API v5._ To see what's new in version 5, [have a look at the changelog](https://github.com/vega/vega-lite/releases/tag/v5.0.0). To use Vega-Lite version 4, see the [Vega-Lite API v4 notebook](https://observablehq.com/@vega/vega-lite-api) instead.

Want to learn more about data visualization and how to use the Vega-Lite API? Read the [introduction to Vega-Lite](https://observablehq.com/@uwdata/introduction-to-vega-lite) and the [data visualization curriculum](https://observablehq.com/@uwdata/data-visualization-curriculum?collection=@uwdata/visualization-curriculum).`}function vt(e){return e`
The cell below imports the Vega-Lite API and registers the desired versions of Vega and Vega-Lite, along with default [Vega View options](https://vega.github.io/vega/docs/api/view/#view) and [Vega-Lite configuration](https://vega.github.io/vega-lite/docs/config.html):
`}async function ht(e,t,a,i,n){const[r,o,l,s]=await Promise.all([`vega@${e}`,`vega-lite@${t}`,`vega-lite-api@${a}`,`vega-tooltip@${i}`].map((e=>n(e)))),d={config:{config:{view:{continuousWidth:400,continuousHeight:300},mark:{tooltip:null}}},init:e=>{e.tooltip((new s.Handler).call),e.container()&&(e.container().style["overflow-x"]="auto")},view:{loader:r.loader({baseURL:"https://cdn.jsdelivr.net/npm/vega-datasets@2/"}),renderer:"canvas"}};return l.register(r,o,d)}function mt(){return"5.6.0"}function bt(){return"5.6.0"}function gt(){return"5.23.0"}function _t(){return"0.30.0"}function wt(e){return e`To use the same setup in your own notebooks, add a cell with the following code:
~~~ js
import {vl} from '@vega/vega-lite-api-v5'
~~~
To use the API outside of Observable, see the [stand-alone usage instructions](#standalone_use) below.
`}function kt(e){return e`<hr/>
## Zip Codes

A dot for each zip code in the United States, colored by the first digit.
`}function yt(e,t){return e.markSquare({size:2,opacity:1}).data("data/zipcodes.csv").transform(e.calculate("substring(datum.zip_code, 0, 1)").as("digit")).project(e.projection("albersUsa")).encode(e.longitude().fieldQ("longitude"),e.latitude().fieldQ("latitude"),e.color().fieldN("digit")).width(t).height(Math.floor(t/1.75)).autosize({type:"fit-x",contains:"padding"}).config({view:{stroke:null}}).render()}function Lt(e){return e`<hr/>
## Interactive Seattle Weather 2012-2015

A scatter plot and summary histogram with linked selections between plots to perform cross-filtering and configure conditional color encodings.
`}function At(e,t){const a=e.selectInterval().encodings("x"),i=e.selectPoint().encodings("color"),n={domain:["sun","fog","drizzle","rain","snow"],range:["#e7ba52","#a7a7a7","#aec7e8","#1f77b4","#9467bd"]},r=e.markPoint({filled:!0}).encode(e.color().value("lightgray").if(a,e.color().fieldN("weather").scale(n).title("Weather")),e.size().fieldQ("precipitation").scale({domain:[-1,50],range:[10,500]}).title("Precipitation"),e.order().fieldQ("precipitation").sort("descending"),e.x().timeMD("date").axis({title:"Date",format:"%b"}),e.y().fieldQ("temp_max").scale({domain:[-5,40]}).axis({title:"Maximum Daily Temperature (°C)"})).width(t).height(300).params(a).transform(e.filter(i)),o=e.markBar().encode(e.color().if(i,e.color().fieldN("weather")).value("lightgray").scale(n).title("Weather"),e.x().count(),e.y().fieldN("weather").scale({domain:n.domain}).title("Weather")).width(t).params(i).transform(e.filter(a));return e.vconcat(r,o).data("data/seattle-weather.csv").autosize({type:"fit-x",contains:"padding"}).render()}function xt(e){return e`<hr/>
## Population Pyramid

A [population pyramid](https://en.wikipedia.org/wiki/Population_pyramid) shows the distribution of age groups in a population. Drag the slider to see the U.S. change over time, but watch out for [missing data in 1890!](https://www.census.gov/history/www/faqs/genealogy_faqs/why_cant_i_find_1890_census_records.html) The slider is generated internally by binding the \`Year\` parameter using \`vl.slider()\`.`}function St(e){return e.markBar({opacity:.4}).params(e.param("Year").value(2e3).bind(e.slider(1850,2e3,10))).data("data/population.json").transform(e.calculate('datum.sex === 1 ? "Male" : "Female"').as("sex"),e.filter("datum.year === Year")).encode(e.x().sum("people").scale({domain:[0,12e6]}).stack(null).title("People"),e.y().fieldO("age").sort("descending").title("Age"),e.color().fieldN("sex").scale({range:["#675193","#ca8861"]}).title("Sex")).height(300).render()}function Pt(e){return e`### Bind Parameters to External Inputs

As an alternative to having Vega-Lite generate its own input widgets (as with \`vl.slider()\` above), we can also directly bind a Vega-Lite parameter to an existing widget, such as Observable's \`Range\` component:`}function Et(e){return e([1850,2e3],{step:10,value:2e3})}function qt(e,t){return e.markBar({opacity:.4}).params(e.param("Year").bind(t)).data("data/population.json").transform(e.calculate('datum.sex === 1 ? "Male" : "Female"').as("sex"),e.filter("datum.year === Year")).encode(e.x().sum("people").scale({domain:[0,12e6]}).stack(null).title("People"),e.y().fieldO("age").sort("descending").title("Age"),e.color().fieldN("sex").scale({range:["#675193","#ca8861"]}).title("Sex")).height(300).render()}function It(e){return e`<hr/>
## Dynamic Query Scatter Plot

A scatter plot of automobile mileage and horsepower. (Shift-)Click the legend and drag the slider to filter by Origin and Year.`}function Mt(e){const t=e.selectPoint("isOrigin").fields("Origin").bind("legend"),a=e.selectPoint("isYear").fields("Year").value(1970).bind(e.slider(1970,1980,1).name("Year")),i=e.and(t,a);return e.markCircle().data("data/cars.json").transform(e.calculate("year(datum.Year)").as("Year")).params(t,a).encode(e.x().fieldQ("Horsepower"),e.y().fieldQ("Miles_per_Gallon"),e.color().if(i,e.color().fieldN("Origin")).value("grey"),e.opacity().if(i,e.value(1)).value(.2)).render()}function Nt(e){return e`<hr/>
## Parallel Coordinates

A [parallel coordinates plot](https://en.wikipedia.org/wiki/Parallel_coordinates) that uses \`window\` and \`fold\` transforms to convert the four dimensions of penguin measurements into normalized coordinates that can be visualized as \`line\` marks. The graphic includes an additional layer with custom \`text\` mark labels for the parallel axis grid lines. We render the plot as SVG by passing \`{renderer:'svg'}\` to the \`render\` method.
`}function Tt(e,t){const a=["Beak Length (mm)","Beak Depth (mm)","Flipper Length (mm)","Body Mass (g)"],i={type:"point",padding:0},n={domain:!1,ticks:!1,title:!1,grid:!0,gridColor:"#888",labelAngle:0,labelPadding:8,labelFontWeight:"bold"},r=e.markLine({strokeWidth:1.5,opacity:.5}).encode(e.color().fieldN("Species").sort("descending"),e.detail().fieldN("index"),e.x().fieldO("key").scale(i).axis(n),e.y().fieldQ("fraction").axis(null)),o=e.markText({dx:-2,align:"right",baseline:"middle"}).transform(e.groupby("key").aggregate(e.min("value").as("min"),e.max("value").as("max")),e.fold("min","max").as("op","value"),e.groupby("key").window(e.percent_rank("value").as("fraction"))).encode(e.x().fieldN("key"),e.y().fieldQ("fraction").axis(null),e.text().field("value").format(",")),l=e.layer(r,o).data("data/penguins.json").transform(e.filter('datum["Beak Length (mm)"] != null'),e.window(e.row_number().as("index")),e.fold(a).as("key","value"),e.groupby("key").join(e.min("value").as("min"),e.max("value").as("max")),e.calculate("(datum.value - datum.min) / (datum.max - datum.min)").as("fraction")).width(t).height(300).autosize({type:"fit-x",contains:"padding"});return l.render({renderer:"svg"})}function Qt(e,t){return e`<hr/>
## Stand-Alone Usage in a Web Browser

To use the Vega-Lite API in the browser outside of Observable, you need to include all the dependencies, set the default configuration, and then register the Vega libraries. Here is some starting code to build from:

~~~html
<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <script src="https://cdn.jsdelivr.net/npm/vega@5"></script>
    <script src="https://cdn.jsdelivr.net/npm/vega-lite@5"></script>
    <script src="https://cdn.jsdelivr.net/npm/vega-lite-api@${t}"></script>
    <script src="https://cdn.jsdelivr.net/npm/vega-tooltip"></script>
  </head>
  <body>
    <div id="view"></div>

    <script>
      // setup API options
      const options = {
        config: {
          // Vega-Lite default configuration
        },
        init: (view) => {
          // initialize tooltip handler
          view.tooltip(new vegaTooltip.Handler().call);
        },
        view: {
          // view constructor options
          // remove the loader if you don't want to default to vega-datasets!
          loader: vega.loader({
            baseURL: "https://cdn.jsdelivr.net/npm/vega-datasets@2/",
          }),
          renderer: "canvas",
        },
      };

      // register vega and vega-lite with the API
      vl.register(vega, vegaLite, options);

      // now you can use the API!
      vl.markBar({ tooltip: true })
        .data([
          { a: "A", b: 28 }, { a: "B", b: 55 }, { a: "C", b: 43 },
          { a: "D", b: 91 }, { a: "E", b: 81 }, { a: "F", b: 53 },
          { a: "G", b: 19 }, { a: "H", b: 87 }, { a: "I", b: 52 },
        ])
        .encode(
          vl.x().fieldQ("b"),
          vl.y().fieldN("a"),
          vl.tooltip([vl.fieldQ("b"), vl.fieldN("a")])
        )
        .render()
        .then(viewElement => {
          // render returns a promise to a DOM element containing the chart
          // viewElement.value contains the Vega View object instance
          document.getElementById('view').appendChild(viewElement);
        });
    </script>
  </body>
</html>

~~~`}function Rt(e,t){const a=e.module();a.variable(t()).define(["md"],pt),a.variable(t()).define(["md"],ft),a.variable(t()).define(["md"],vt),a.variable(t("vl")).define("vl",["vegaVersion","vlVersion","apiVersion","tooltipVersion","require"],ht),a.variable(t("apiVersion")).define("apiVersion",mt),a.variable(t("vlVersion")).define("vlVersion",bt),a.variable(t("vegaVersion")).define("vegaVersion",gt),a.variable(t("tooltipVersion")).define("tooltipVersion",_t),a.variable(t()).define(["md"],wt),a.variable(t("zip_codes")).define("zip_codes",["md"],kt),a.variable(t()).define(["vl","width"],yt),a.variable(t("interactive_weather")).define("interactive_weather",["md"],Lt),a.variable(t()).define(["vl","width"],At),a.variable(t("population_pyramid")).define("population_pyramid",["md"],xt),a.variable(t()).define(["vl"],St),a.variable(t("bind_external")).define("bind_external",["md"],Pt);const i=e.module(ct);return a.import("Range",i),a.variable(t("viewof year")).define("viewof year",["Range"],Et),a.variable(t("year")).define("year",["Generators","viewof year"],((e,t)=>e.input(t))),a.variable(t()).define(["vl","viewof year"],qt),a.variable(t("dynamic_scatter")).define("dynamic_scatter",["md"],It),a.variable(t()).define(["vl"],Mt),a.variable(t("parallel_coordinats")).define("parallel_coordinats",["md"],Nt),a.variable(t()).define(["vl","width"],Tt),a.variable(t("standalone_use")).define("standalone_use",["md","apiVersion"],Qt),a}function Vt(e){return e`# Data Visualization 2024 Final Project`}function Wt(e){return e("d3@7")}function Dt(e,t,a){return e(t("2020_student_behavior.csv"),{from:{table:"2020_student_behavior"},sort:[],slice:{to:null,from:null},filter:[],select:{columns:null}},a)}function zt(e,t,a){return e(t("dep_weekly@2.csv"),{from:{table:"dep_weekly"},sort:[],slice:{to:null,from:null},filter:[],select:{columns:null}},a)}function Ct(e,t,a){return e(t("2019_student_with_mental_health_interpolated.csv"),{from:{table:"2019_student_with_mental_health_interpolated"},sort:[],slice:{to:null,from:null},filter:[],select:{columns:null}},a)}function Ft(e,t,a){return e(t("2020_student_with_mental_health_interpolated.csv"),{from:{table:"2020_student_with_mental_health_interpolated"},sort:[],slice:{to:null,from:null},filter:[],select:{columns:null}},a)}function Bt(e,t,a){return e(t("2021_student_with_mental_health_interpolated.csv"),{from:{table:"2021_student_with_mental_health_interpolated"},sort:[],slice:{to:null,from:null},filter:[],select:{columns:null}},a)}function Ht(e,t,a){return e(t("student_behavior_combined_with_mental_health_interpolated_drop_nan@3.csv"),{from:{table:"student_behavior_combined_with_mental_health_interpolated"},sort:[],slice:{to:null,from:null},filter:[],select:{columns:null}},a)}function Gt(e){return e}function Yt(e){function t(e){let t=e.date.getDay(),a=6-t;e.date.setDate(e.date.getDate()+a)}for(let a=0;a<e.length;a++)t(e[a]);return e}function jt(e){return e}function Ot(e){return e.select(["2019","2020","2021"],{label:"Select one"})}function Ut(e,t,a,i){return 2019==e?t:2020==e?a:i}function $t(e,t){return e.filter((e=>e.Year==t))}function Kt(e){return e.range([2019,2021],{label:"Year",step:1,value:2019})}function Jt(e){return e.select(["PANAS negative score","PANAS positive score","PHQ4 depression score","PHQ4 anxiety score"],{label:"Select one"})}function Xt(e,t,a,i){const n=e.selectPoint("hover").on("mouseover"),r=e.markLine().params(n).encode(e.detail().fieldN("pid"),e.tooltip().fieldN("pid"),e.color().if(e.or(n.empty(!1)),e.value("#0818A8")).value("gray"),e.opacity().if(e.or(n.empty(!1))).value(.1)),o=e.markText({dx:40,dy:-10,fontSize:15,fontWeight:"bold"}).transform(e.filter(e.or(n.empty(!1)))).encode(e.text().fieldN("pid")),l=e.layer(r,o).encode(e.y().fieldQ("negative_affect_EMA").title("PANAS Negative Affect Score"),e.color().datum("Student Line")),s=e.markLine({strokeDash:[8]}).transform(e.filter("isNaN(datum.positive_affect_EMA) == false"),e.groupby(["week","week_period"]).aggregate(e.average("negative_affect_EMA").as("mean_negative_score"))).encode(e.y().fieldQ("mean_negative_score"),e.color().datum("Average")),d=e.layer(s,l).data(t).title("Student PANAS Negative Mental Health score over the Weeks").config({fontSize:50}).encode(e.x().fieldQ("week").scale({domain:[1,14]}),e.color().scale({domain:["Average","Student Line"],range:["#000000","#0818A8"]})).width("container").height(600).autosize({type:"fit-x",contains:"padding"}).config({background:null}).render().then((e=>(setTimeout((()=>window.dispatchEvent(new a("resize"))),1),e))),u=e.markLine().params(n).encode(e.detail().fieldN("pid"),e.tooltip().fieldN("pid"),e.color().if(e.or(n.empty(!1)),e.value("#A020F0")).value("gray"),e.opacity().if(e.or(n.empty(!1))).value(.1)),c=e.markText({dx:40,dy:-10,fontSize:15,fontWeight:"bold"}).transform(e.filter(e.or(n.empty(!1)))).encode(e.text().fieldN("pid")),p=e.layer(u,c).encode(e.y().fieldQ("positive_affect_EMA").title("PANAS Positive Affect Score"),e.color().datum("Student Line")),f=e.markLine({strokeDash:[8]}).transform(e.filter("isNaN(datum.positive_affect_EMA) == false"),e.groupby(["week","week_period"]).aggregate(e.average("positive_affect_EMA").as("mean_positive_score"))).encode(e.y().fieldQ("mean_positive_score"),e.color().datum("Average")),v=e.layer(p,f).data(t).title("Student PANAS Positive Mental Health score over the Weeks").encode(e.x().fieldQ("week").scale({domain:[1,14]}),e.color().scale({domain:["Average","Student Line"],range:["#000000","#A020F0"]})).width("container").height(600).autosize({type:"fit-x",contains:"padding"}).config({background:null}).render().then((e=>(setTimeout((()=>window.dispatchEvent(new a("resize"))),1),e))),h=e.markLine().params(n).encode(e.detail().fieldN("pid"),e.tooltip().fieldN("pid"),e.color().if(e.or(n.empty(!1)),e.value("orange")).value("gray"),e.opacity().if(e.or(n.empty(!1))).value(.05)),m=e.markText({dx:40,dy:-10,fontSize:15,fontWeight:"bold"}).transform(e.filter(e.or(n.empty(!1)))).encode(e.text().fieldN("pid")),b=e.layer(h,m).encode(e.y().fieldQ("phq4_anxiety_EMA").title("PHQ4 Anxiety Score"),e.color().datum("Student Line")),g=e.markLine({strokeDash:[8]}).transform(e.filter("isNaN(datum.phq4_anxiety_EMA) == false"),e.groupby(["week","week_period"]).aggregate(e.average("phq4_anxiety_EMA").as("mean_anxiety_score"))).encode(e.y().fieldQ("mean_anxiety_score"),e.color().datum("Average")),_=e.layer(b,g).data(t).title("Student Anxiety PHQ4 Score over the Weeks").encode(e.x().fieldQ("week").scale({domain:[1,14]}),e.color().scale({domain:["Average","Student Line"],range:["#000000","orange"]})).width("container").height(600).autosize({type:"fit-x",contains:"padding"}).config({background:null}).render().then((e=>(setTimeout((()=>window.dispatchEvent(new a("resize"))),1),e))),w=e.markLine().data(t).params(n).encode(e.detail().fieldN("pid"),e.tooltip().fieldN("pid"),e.color().if(e.or(n.empty(!1)),e.value("#DB0000")).value("gray"),e.opacity().if(e.or(n.empty(!1))).value(.05)),k=e.markText({dx:40,dy:-10,fontSize:15,fontWeight:"bold"}).data(t).transform(e.filter(e.or(n.empty(!1)))).encode(e.text().fieldN("pid")),y=e.layer(w,k).data(t).title("Student Depression PHQ4 Score over the Weeks").encode(e.y().fieldQ("phq4_depression_EMA").title("PHQ4 Depression Score"),e.x().fieldQ("week").scale({domain:[1,14]}),e.color().datum("Student Line")),L=e.markLine({strokeDash:[8]}).transform(e.filter("isNaN(datum.phq4_depression_EMA) == false"),e.groupby(["week","week_period"]).aggregate(e.average("phq4_depression_EMA").as("mean_depression_score"))).encode(e.y().fieldQ("mean_depression_score"),e.color().datum("Average")),A=e.layer(L,y).data(t).encode(e.x().fieldQ("week").scale({domain:[1,14]}),e.color().scale({domain:["Average","Student Line"],range:["#000000","#DB0000"]})).width("container").height(600).autosize({type:"fit-x",contains:"padding"}).config({background:null}).render().then((e=>(setTimeout((()=>window.dispatchEvent(new a("resize"))),1),e)));return"PANAS negative score"==i?d:"PANAS positive score"==i?v:"PHQ4 depression score"==i?A:_}function Zt(e,t,a){const i=e.markLine().encode(e.color().value("orange")).width(500),n=e.markCircle().encode(e.tooltip(["Number of scores collected","mean_positive_score","week_period"]),e.color().value("black"),e.size().value("50")),r=e.markLine().encode(e.color().value("red")).width(500),o=e.markCircle().encode(e.tooltip(["Number of scores collected","mean_negative_score","week_period"]),e.color().value("black"),e.size().value("50")),l=e.markLine().encode(e.color().value("green")).width(500),s=e.markCircle().encode(e.tooltip(["Number of scores collected","depression_score","week_period"]),e.color().value("black"),e.size().value("50")),d=e.markLine().encode(e.color().value("blue")).width(500),u=e.markCircle().encode(e.tooltip(["Number of scores collected","anxiety_score","week_period"]),e.color().value("black"),e.size().value("50")),c=e.layer(i,n).title("Mean Positive Score Value over Quarter Weeks").encode(e.y().fieldQ("mean_positive_score").scale({domain:[0,10]}).title("Mean Attribute Value"),e.x().fieldO("week").axis({labelAngle:0})),p=e.layer(r,o).title("Mean Negative Score Value over Quarter Weeks").encode(e.y().fieldQ("mean_negative_score").scale({domain:[0,10]}).title("Mean Attribute Value"),e.x().fieldO("week").axis({labelAngle:0})),f=e.layer(l,s).title("Mean PHQ4 Depression Value over Quarter Weeks").encode(e.y().fieldQ("depression_score").scale({domain:[0,3]}).title("Mean Depression Value"),e.x().fieldO("week").axis({labelAngle:0})),v=e.layer(d,u).title("Mean PHQ4 Anxiety Value over Quarter Weeks").encode(e.y().fieldQ("anxiety_score").scale({domain:[0,3]}).title("Mean Anxiety Value"),e.x().fieldO("week").axis({labelAngle:0})),h=e.hconcat(c,p),m=e.hconcat(v,f),b=e.vconcat(h,m).data(t).transform(e.filter(`isNaN(datum.phq4_) == false && datum.Year == ${a}`),e.groupby(["week","week_period"]).aggregate(e.average("negative_affect_EMA").as("mean_negative_score"),e.average("positive_affect_EMA").as("mean_positive_score"),e.average("phq4_depression_EMA").as("depression_score"),e.average("phq4_anxiety_EMA").as("anxiety_score"),e.count().as("Number of scores collected"))).render();return b}function ea(e){return e}function ta(e){return["All",...new Set(e.map((e=>e.pid)))]}function aa(e){return e.filter((e=>6==e.week))}function ia(e,t){return e.filter((e=>e.Year==t))}function na(e){return e.range([2019,2021],{label:"Year",step:1,value:2019})}function ra(e,t){return e.select(t,{label:"Select participant",value:"All"})}function oa(e,t,a,i,n,r,o){let l;l=2021===e?t.filter((e=>2021==e.Year)):2020===e?t.filter((e=>2020==e.Year)):t.filter((e=>2019==e.Year));const s=i.selectPoint("select").init(1).fields("week").nearest(!0),d=i.markPoint().title("Effect of Total Steps on PANAS Positive Mental Health Score").transform(i.filter(s.empty(!1))).encode(i.x().fieldQ("f_steps:fitbit_steps_intraday_rapids_sumsteps:allday").title("Average steps in week"),i.y().fieldQ("positive_affect_EMA").title("PANAS Positive Score"),i.color().condition({test:`'${n}' == 'All' ? true : datum.pid ==='${n}'`,value:"#DB0000"}).value("gray"),i.opacity().condition({test:`'${n}' == 'All' ? true : datum.pid ==='${n}'`,value:"1"}).value(.3),i.size().value(80),i.tooltip(["pid",{field:"f_steps:fitbit_steps_intraday_rapids_sumsteps:allday",format:"0.2f",title:"Average Steps"},"positive_affect_EMA",{field:"f_loc:phone_locations_doryab_radiusgyration:allday",format:"0.2f",title:"Area covered"}])),u=i.markLine({strokeDash:[8]}).transform(i.filter(s.empty(!1)),i.regression("f_steps:fitbit_steps_intraday_rapids_sumsteps:allday").on("positive_affect_EMA")).encode(i.x().fieldQ("f_steps:fitbit_steps_intraday_rapids_sumsteps:allday"),i.y().fieldQ("positive_affect_EMA"),i.color().value("black")),c=i.layer(d,u).config({background:null,transition:500}).width(Math.max(.3*r,500)).height(500),p=i.markLine().encode(i.color().value("grey")),f=i.markCircle().params(s).encode(i.size().value("50"),i.color().if(s.empty(!1),i.value("red")).value("grey")),v=i.layer(p,f).width(Math.max(.3*r,500)).height(100).title("Student Weekly Average Steps Over Time").transform(i.filter(`'${n}' == 'All' ? true : datum.pid ==='${n}'`),i.average("f_steps:fitbit_steps_intraday_rapids_sumsteps:allday").as("mean_average_steps")).encode(i.x().fieldQ("week"),i.y().fieldQ("f_steps:fitbit_steps_intraday_rapids_sumsteps:allday").title("Average steps in the week")).config({background:null});return i.vconcat(v,c).data(l).config({background:null}).autosize({type:"fit-x",contains:"padding"}).render().then((e=>(setTimeout((()=>window.dispatchEvent(new o("resize"))),1),e)))}function la(e){return e.range([2019,2021],{label:"Year",step:1,value:2019})}function sa(e,t,a,i,n){let r;r=2021===e?t.filter((e=>2021==e.Year)):2020===e?t.filter((e=>2020==e.Year)):t.filter((e=>2019==e.Year));const o=a.selectInterval(),l=a.markPoint().title("student phone usage all day over 12 week quarter").params(o).encode(a.x().fieldO("week_period"),a.y().fieldQ("f_steps:fitbit_steps_intraday_rapids_sumsteps:allday").title("student steps")).height(150).width(.6*i),s=a.markCircle().title("Morning Phone Usage").transform(a.filter(o),a.groupby("pid").aggregate(a.average("positive_affect_EMA").as("panas"),a.average("f_steps:fitbit_steps_intraday_rapids_sumsteps:morning").as("average_morn_steps"))).encode(a.x().fieldQ("average_morn_steps").title("average number of steps"),a.y().fieldQ("panas").scale({domain:[0,20]}).title("PANAS Positive Score"),a.tooltip([{title:"Student Identifier",field:"pid"},{title:"Average Morning Steps",field:"average_morn_steps"},{title:"Average PANAS Score",field:"panas"}]),a.stroke().value("#000000"),a.strokeWidth().value(.2)),d=a.markLine().transform(a.filter(o),a.groupby("pid").aggregate(a.average("positive_affect_EMA").as("panas"),a.average("f_steps:fitbit_steps_intraday_rapids_sumsteps:morning").as("average_morn_steps")),a.regression("panas").on("average_morn_steps")).encode(a.y().fieldQ("panas").scale({domain:[0,20]}),a.x().fieldQ("average_morn_steps"),a.color().value("red")),u=a.layer(s,d).width(i/4).height(200),c=a.markCircle().title({text:"Afternoon Phone Usage"}).transform(a.filter(o),a.groupby("pid").aggregate(a.average("positive_affect_EMA").as("panas"),a.average("f_steps:fitbit_steps_intraday_rapids_sumsteps:afternoon").as("average_aft_steps"))).encode(a.x().fieldQ("average_aft_steps").title("average number of steps"),a.y().fieldQ("panas").scale({domain:[0,20]}).title("PANAS Positive Score"),a.tooltip([{title:"Student Identifier",field:"pid"},{title:"Average Afternoon Steps",field:"average_aft_steps"},{title:"Average PANAS Score",field:"average_sleep_time"}]),a.stroke().value("#000000"),a.strokeWidth().value(.2)),p=a.markLine().transform(a.filter(o),a.groupby("pid").aggregate(a.average("positive_affect_EMA").as("panas"),a.average("f_steps:fitbit_steps_intraday_rapids_sumsteps:afternoon").as("average_aft_steps")),a.regression("panas").on("average_aft_steps")).encode(a.y().fieldQ("panas").scale({domain:[0,20]}),a.x().fieldQ("average_aft_steps"),a.color().value("red")),f=a.layer(c,p).width(i/4).height(200),v=a.markCircle().title("Evening Phone Usage").transform(a.filter(o),a.groupby("pid").aggregate(a.average("positive_affect_EMA").as("panas"),a.average("f_steps:fitbit_steps_intraday_rapids_sumsteps:evening").as("average_even_steps"))).encode(a.x().fieldQ("average_even_steps").title("average number of steps"),a.y().fieldQ("panas").scale({domain:[0,20]}).title("PANAS Positive Score"),a.tooltip([{title:"Student Identifier",field:"pid"},{title:"Average Evening Steps",field:"average_even_steps"},{title:"Average PANAS Score",field:"panas"}]),a.stroke().value("#000000"),a.strokeWidth().value(.2)),h=a.markLine().transform(a.filter(o),a.groupby("pid").aggregate(a.average("positive_affect_EMA").as("panas"),a.average("f_steps:fitbit_steps_intraday_rapids_sumsteps:evening").as("average_even_steps")),a.regression("panas").on("average_even_steps")).encode(a.y().fieldQ("panas").scale({domain:[0,20]}),a.x().fieldQ("average_even_steps"),a.color().value("red")),m=a.layer(v,h).width(i/4).height(200),b=a.markCircle().title({text:"Night Phone Usage",fontSize:"12"}).transform(a.filter(o),a.groupby("pid").aggregate(a.average("positive_affect_EMA").as("panas"),a.average("f_steps:fitbit_steps_intraday_rapids_sumsteps:night").as("average_night_steps"))).encode(a.x().fieldQ("average_night_steps").title("average number of steps"),a.y().fieldQ("panas").scale({domain:[0,20]}).title("PANAS Positive Score"),a.tooltip([{title:"Student Identifier",field:"pid"},{title:"Average Night Steps",field:"average_night_steps"},{title:"Average PANAS Score",field:"panas"}]),a.stroke().value("#000000"),a.strokeWidth().value(.2)),g=a.markLine().transform(a.filter(o),a.groupby("pid").aggregate(a.average("positive_affect_EMA").as("panas"),a.average("f_steps:fitbit_steps_intraday_rapids_sumsteps:night").as("average_night_steps")),a.regression("panas").on("average_night_steps")).encode(a.y().fieldQ("panas").scale({domain:[0,20]}),a.x().fieldQ("average_night_steps"),a.color().value("red")),_=a.layer(b,g).width(i/4).height(200),w=a.vconcat(a.hconcat(u,f).spacing(.06*n),a.hconcat(m,_).spacing(.06*n)).config({dy:"10"}).title({text:"Impact of student screen time on average night sleep scores",fontSize:"15",anchor:"start",dy:".1"});return a.vconcat(l,w).config({background:null}).spacing(30).data(r).render()}function da(e,t){const i=e.module();function n(){return this.url}const r=new Map([["2021_student_with_mental_health_interpolated.csv",{url:new URL(a(9350),a.b),mimeType:"text/csv",toString:n}],["2020_student_with_mental_health_interpolated.csv",{url:new URL(a(3227),a.b),mimeType:"text/csv",toString:n}],["2019_student_with_mental_health_interpolated.csv",{url:new URL(a(8181),a.b),mimeType:"text/csv",toString:n}],["2020_student_behavior.csv",{url:new URL(a(2586),a.b),mimeType:"text/csv",toString:n}],["dep_weekly@2.csv",{url:new URL(a(5419),a.b),mimeType:"text/csv",toString:n}],["student_behavior_combined_with_mental_health_interpolated_drop_nan@3.csv",{url:new URL(a(9523),a.b),mimeType:"text/csv",toString:n}]]);i.builtin("FileAttachment",e.fileAttachments((e=>r.get(e)))),i.variable(t()).define(["md"],Vt);const o=e.module(Rt);return i.import("vl",o),i.variable(t("d3")).define("d3",["require"],Wt),i.variable(t("student_behavior_2020")).define("student_behavior_2020",["__query","FileAttachment","invalidation"],Dt),i.variable(t("dep_weekly_2020")).define("dep_weekly_2020",["__query","FileAttachment","invalidation"],zt),i.variable(t("s_m_h_2019")).define("s_m_h_2019",["__query","FileAttachment","invalidation"],Ct),i.variable(t("s_m_h_2020")).define("s_m_h_2020",["__query","FileAttachment","invalidation"],Ft),i.variable(t("s_m_h_2021")).define("s_m_h_2021",["__query","FileAttachment","invalidation"],Bt),i.variable(t("total_interpolated")).define("total_interpolated",["__query","FileAttachment","invalidation"],Ht),i.variable(t("mental_health_data_object")).define("mental_health_data_object",["dep_weekly_2020"],Gt),i.variable(t("filtered_MH_data_array")).define("filtered_MH_data_array",["mental_health_data_object"],Yt),i.variable(t("screen_time_data")).define("screen_time_data",["student_behavior_2020"],jt),i.variable(t("viewof year_dropdown")).define("viewof year_dropdown",["Inputs"],Ot),i.variable(t("year_dropdown")).define("year_dropdown",["Generators","viewof year_dropdown"],((e,t)=>e.input(t))),i.variable(t("student_movement_array")).define("student_movement_array",["year_dropdown","s_m_h_2019","s_m_h_2020","s_m_h_2021"],Ut),i.variable(t("year_data")).define("year_data",["total_interpolated","year_range_def"],$t),i.variable(t("viewof year_range_def")).define("viewof year_range_def",["Inputs"],Kt),i.variable(t("year_range_def")).define("year_range_def",["Generators","viewof year_range_def"],((e,t)=>e.input(t))),i.variable(t("viewof emotion_score")).define("viewof emotion_score",["Inputs"],Jt),i.variable(t("emotion_score")).define("emotion_score",["Generators","viewof emotion_score"],((e,t)=>e.input(t))),i.variable(t("first_plot")).define("first_plot",["vl","year_data","Event","emotion_score"],Xt),i.variable(t()).define(["vl","total_interpolated","year_range_def"],Zt),i.variable(t("object")).define("object",["s_m_h_2020"],ea),i.variable(t("participant_num")).define("participant_num",["year_data_steps"],ta),i.variable(t("filter_array_test")).define("filter_array_test",["s_m_h_2021"],aa),i.variable(t("year_data_steps")).define("year_data_steps",["total_interpolated","year_steps"],ia),i.variable(t("viewof year_steps")).define("viewof year_steps",["Inputs"],na),i.variable(t("year_steps")).define("year_steps",["Generators","viewof year_steps"],((e,t)=>e.input(t))),i.variable(t("viewof participant_dropdown")).define("viewof participant_dropdown",["Inputs","participant_num"],ra),i.variable(t("participant_dropdown")).define("participant_dropdown",["Generators","viewof participant_dropdown"],((e,t)=>e.input(t))),i.variable(t("final_chart")).define("final_chart",["year_steps","total_interpolated","viewof participant_dropdown","vl","participant_dropdown","width","Event"],oa),i.variable(t("viewof steps_breakdown")).define("viewof steps_breakdown",["Inputs"],la),i.variable(t("steps_breakdown")).define("steps_breakdown",["Generators","viewof steps_breakdown"],((e,t)=>e.input(t))),i.variable(t("steps_time_breakdown")).define("steps_time_breakdown",["steps_breakdown","total_interpolated","vl","width","innerWidth"],sa),i}var ua={name:"Note-book",components:{sectionContainer:N.A,overLappingButton:G},data(){return{clicked:!1}},setup(){const e=(0,I.KR)(null),t=(0,I.KR)(null),a=(0,I.KR)(null),n=(0,I.KR)(null),r=(0,I.KR)(null),o=(0,I.KR)(null),l=(0,I.KR)(null),s=(0,I.KR)(null);let d;return(0,i.sV)((()=>{d=new M.vY,d.module(da,(i=>"viewof emotion_score"===i?new M.a3(t.value):"first_plot"===i?new M.a3(a.value):"viewof year_range_def"===i?new M.a3(e.value):"viewof year_steps"===i?new M.a3(n.value):"viewof participant_dropdown"===i?new M.a3(r.value):"final_chart"===i?new M.a3(o.value):"viewof steps_breakdown"===i?new M.a3(l.value):"steps_time_breakdown"===i?new M.a3(s.value):["year_data","year_data_steps","participant_num"].includes(i)));const i=a.value;i&&(i.addEventListener("mouseover",(e=>{console.log("Hover event on the first plot:",e)})),i.addEventListener("click",(e=>{console.log("Click event on the first plot:",e)}))),console.log("here"),window.dispatchEvent(new Event("resize")),window.addEventListener("resize",(function(){console.log("Resize found")}))})),(0,i.xo)((()=>{d&&d.dispose()})),{viewofYear_range:e,viewofEmotion_score:t,first_plot:a,viewofYear_steps:n,viewofParticipant_dropdown:r,final_chart:o,viewofStep_breakdown:l,steps_time_breakdown:s}}};const ca=(0,B.A)(ua,[["render",q],["__scopeId","data-v-7b530767"]]);var pa=ca},3227:function(e,t,a){e.exports=a.p+"4902bcbbf3841fcd.csv"},9350:function(e,t,a){e.exports=a.p+"8fe2e4904cea171d.csv"},8181:function(e,t,a){e.exports=a.p+"f612e72bc9547a5e.csv"},5419:function(e,t,a){e.exports=a.p+"a8ec0babdc3aed51.csv"},9523:function(e,t,a){e.exports=a.p+"2723661b7e79ce3d.csv"},4018:function(e,t,a){e.exports=a.p+"83738881ebf72ceb.tsv"},2586:function(e,t,a){e.exports=a.p+"5e2a76b8e983d14a.csv"}}]);
//# sourceMappingURL=529.0e8da978.js.map